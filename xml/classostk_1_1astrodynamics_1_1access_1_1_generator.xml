<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1astrodynamics_1_1access_1_1_generator" kind="class" language="C++" prot="public">
    <compoundname>ostk::astrodynamics::access::Generator</compoundname>
    <includes refid="_access_2_generator_8hpp" local="no">Generator.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1ad018f05018c20eb8fba73c35b4ddf191" prot="private" static="no" mutable="no">
        <type>Environment</type>
        <definition>Environment ostk::astrodynamics::access::Generator::environment_</definition>
        <argsstring></argsstring>
        <name>environment_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="238" column="17" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1adbef215f83d693acb384956f04ca51e1" prot="private" static="no" mutable="no">
        <type>Duration</type>
        <definition>Duration ostk::astrodynamics::access::Generator::step_</definition>
        <argsstring></argsstring>
        <name>step_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="240" column="14" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a3ee21269375995ed6e24cdc369149468" prot="private" static="no" mutable="no">
        <type>Duration</type>
        <definition>Duration ostk::astrodynamics::access::Generator::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="241" column="14" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a93f6d19a83c46a7d8c00a4b0dcb1faa3" prot="private" static="no" mutable="no">
        <type>std::function&lt; bool(const <ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref> &amp;)&gt;</type>
        <definition>std::function&lt;bool(const Access&amp;)&gt; ostk::astrodynamics::access::Generator::accessFilter_</definition>
        <argsstring></argsstring>
        <name>accessFilter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="243" column="19" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a79dd96cb36db13816b88cbc6f291fd75" prot="private" static="no" mutable="no">
        <type>std::function&lt; bool(const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;, const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;)&gt;</type>
        <definition>std::function&lt;bool(const State&amp;, const State&amp;)&gt; ostk::astrodynamics::access::Generator::stateFilter_</definition>
        <argsstring></argsstring>
        <name>stateFilter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="244" column="19" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1afb8ddb0c56e350fc20de4824c5120169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::access::Generator::Generator</definition>
        <argsstring>(const Environment &amp;anEnvironment, const Duration &amp;aStep=DEFAULT_STEP, const Duration &amp;aTolerance=DEFAULT_TOLERANCE, const std::function&lt; bool(const Access &amp;)&gt; &amp;anAccessFilter={}, const std::function&lt; bool(const State &amp;, const State &amp;)&gt; &amp;aStateFilter={})</argsstring>
        <name>Generator</name>
        <param>
          <type>const Environment &amp;</type>
          <declname>anEnvironment</declname>
        </param>
        <param>
          <type>const Duration &amp;</type>
          <declname>aStep</declname>
          <defval><ref refid="_access_2_generator_8hpp_1a7ce1d4cc8c33e65c078f721b17b975ea" kindref="member">DEFAULT_STEP</ref></defval>
        </param>
        <param>
          <type>const Duration &amp;</type>
          <declname>aTolerance</declname>
          <defval><ref refid="_access_2_generator_8hpp_1a0e355e0dcb761f1b89524e0e77fd14bd" kindref="member">DEFAULT_TOLERANCE</ref></defval>
        </param>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref> &amp;)&gt; &amp;</type>
          <declname>anAccessFilter</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;, const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;)&gt; &amp;</type>
          <declname>aStateFilter</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="191" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="140" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a1e243fd78e139af1f1cabd1729fc251a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::access::Generator::isDefined</definition>
        <argsstring>() const</argsstring>
        <name>isDefined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="199" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a2adf2bc167b4976cfa0a2a62f5898f11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Duration</type>
        <definition>Duration ostk::astrodynamics::access::Generator::getStep</definition>
        <argsstring>() const</argsstring>
        <name>getStep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="201" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="160" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1ae922b298068bb965e0b45f605b5cbb43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Duration</type>
        <definition>Duration ostk::astrodynamics::access::Generator::getTolerance</definition>
        <argsstring>() const</argsstring>
        <name>getTolerance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="203" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="170" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1aa1ad7dc07137fa64d62992c3cf9f85ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::function&lt; bool(const <ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref> &amp;)&gt;</type>
        <definition>std::function&lt; bool(const Access &amp;)&gt; ostk::astrodynamics::access::Generator::getAccessFilter</definition>
        <argsstring>() const</argsstring>
        <name>getAccessFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="205" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="180" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1ad19f8b17276b76b3c80af94fa02c4a41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::function&lt; bool(const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;, const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;)&gt;</type>
        <definition>std::function&lt; bool(const State &amp;, const State &amp;)&gt; ostk::astrodynamics::access::Generator::getStateFilter</definition>
        <argsstring>() const</argsstring>
        <name>getStateFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="207" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="190" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1ae2897d02ad4d74f277c6e6cd7fc09b5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::function&lt; bool(const Instant &amp;)&gt;</type>
        <definition>std::function&lt; bool(const Instant &amp;)&gt; ostk::astrodynamics::access::Generator::getConditionFunction</definition>
        <argsstring>(const AccessTarget &amp;anAccessTarget, const Trajectory &amp;aToTrajectory) const</argsstring>
        <name>getConditionFunction</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1access_1_1_access_target" kindref="compound">AccessTarget</ref> &amp;</type>
          <declname>anAccessTarget</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aToTrajectory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="209" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="200" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a214d29186ea54c3074d81bf9a6603876" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Array&lt; <ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref> &gt;</type>
        <definition>Array&lt; Access &gt; ostk::astrodynamics::access::Generator::computeAccesses</definition>
        <argsstring>(const physics::time::Interval &amp;anInterval, const AccessTarget &amp;anAccessTarget, const Trajectory &amp;aToTrajectory, const bool &amp;coarse=false) const</argsstring>
        <name>computeAccesses</name>
        <param>
          <type>const physics::time::Interval &amp;</type>
          <declname>anInterval</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1access_1_1_access_target" kindref="compound">AccessTarget</ref> &amp;</type>
          <declname>anAccessTarget</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aToTrajectory</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>coarse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="213" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="264" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1aba3b221a4227e0b06a8b10bb1d2ac248" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Array&lt; Array&lt; <ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref> &gt; &gt;</type>
        <definition>Array&lt; Array&lt; Access &gt; &gt; ostk::astrodynamics::access::Generator::computeAccesses</definition>
        <argsstring>(const physics::time::Interval &amp;anInterval, const Array&lt; AccessTarget &gt; &amp;someAccessTargets, const Trajectory &amp;aToTrajectory, const bool &amp;coarse=false) const</argsstring>
        <name>computeAccesses</name>
        <param>
          <type>const physics::time::Interval &amp;</type>
          <declname>anInterval</declname>
        </param>
        <param>
          <type>const Array&lt; <ref refid="classostk_1_1astrodynamics_1_1access_1_1_access_target" kindref="compound">AccessTarget</ref> &gt; &amp;</type>
          <declname>someAccessTargets</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aToTrajectory</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>coarse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="220" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="296" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a5f3b9a1e35e1fb102c0a8c84e4f6aec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostk::astrodynamics::access::Generator::setStep</definition>
        <argsstring>(const Duration &amp;aStep)</argsstring>
        <name>setStep</name>
        <param>
          <type>const Duration &amp;</type>
          <declname>aStep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="227" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="360" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a3cf72f1f58dbb09c81965e4b5efc2587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostk::astrodynamics::access::Generator::setTolerance</definition>
        <argsstring>(const Duration &amp;aTolerance)</argsstring>
        <name>setTolerance</name>
        <param>
          <type>const Duration &amp;</type>
          <declname>aTolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="229" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="370" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1aca6b21db7ceaa2c23d5c59a79ac4eef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostk::astrodynamics::access::Generator::setAccessFilter</definition>
        <argsstring>(const std::function&lt; bool(const Access &amp;)&gt; &amp;anAccessFilter)</argsstring>
        <name>setAccessFilter</name>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref> &amp;)&gt; &amp;</type>
          <declname>anAccessFilter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="231" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1ab71661ad9230d54a449e7df756d2d14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostk::astrodynamics::access::Generator::setStateFilter</definition>
        <argsstring>(const std::function&lt; bool(const State &amp;, const State &amp;)&gt; &amp;aStateFilter)</argsstring>
        <name>setStateFilter</name>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;, const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;)&gt; &amp;</type>
          <declname>aStateFilter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="233" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="385" bodyend="388"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a1d28164d6563e8b92d7f20987d20df51" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1access_1_1_generator" kindref="compound">Generator</ref></type>
        <definition>Generator ostk::astrodynamics::access::Generator::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="235" column="22" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="390" bodyend="393"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a3730059acc84fc8b0fe8eadbd6a7e4c7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Array&lt; <ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref> &gt;</type>
        <definition>Array&lt; Access &gt; ostk::astrodynamics::access::Generator::computeAccessesForTrajectoryTarget</definition>
        <argsstring>(const physics::time::Interval &amp;anInterval, const AccessTarget &amp;anAccessTarget, const Trajectory &amp;aToTrajectory) const</argsstring>
        <name>computeAccessesForTrajectoryTarget</name>
        <param>
          <type>const physics::time::Interval &amp;</type>
          <declname>anInterval</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1access_1_1_access_target" kindref="compound">AccessTarget</ref> &amp;</type>
          <declname>anAccessTarget</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aToTrajectory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="246" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="395" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1adbdbe36beb8bbf63d1045c220058289d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Array&lt; Array&lt; <ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref> &gt; &gt;</type>
        <definition>Array&lt; Array&lt; Access &gt; &gt; ostk::astrodynamics::access::Generator::computeAccessesForFixedTargets</definition>
        <argsstring>(const physics::time::Interval &amp;anInterval, const Array&lt; AccessTarget &gt; &amp;someAccessTargets, const Trajectory &amp;aToTrajectory, const bool &amp;coarse=false) const</argsstring>
        <name>computeAccessesForFixedTargets</name>
        <param>
          <type>const physics::time::Interval &amp;</type>
          <declname>anInterval</declname>
        </param>
        <param>
          <type>const Array&lt; <ref refid="classostk_1_1astrodynamics_1_1access_1_1_access_target" kindref="compound">AccessTarget</ref> &gt; &amp;</type>
          <declname>someAccessTargets</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aToTrajectory</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>coarse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="250" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="409" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a52230a41412b3ce41b8688a8b0a6785e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Array&lt; <ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref> &gt;</type>
        <definition>Array&lt; Access &gt; ostk::astrodynamics::access::Generator::generateAccessesFromIntervals</definition>
        <argsstring>(const Array&lt; physics::time::Interval &gt; &amp;someIntervals, const physics::time::Interval &amp;anInterval, const Trajectory &amp;aFromTrajectory, const Trajectory &amp;aToTrajectory) const</argsstring>
        <name>generateAccessesFromIntervals</name>
        <param>
          <type>const Array&lt; physics::time::Interval &gt; &amp;</type>
          <declname>someIntervals</declname>
        </param>
        <param>
          <type>const physics::time::Interval &amp;</type>
          <declname>anInterval</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aFromTrajectory</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aToTrajectory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="257" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="710" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a03c578cbf4f653ef69892b318754a8ea" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Array&lt; physics::time::Interval &gt;</type>
        <definition>Array&lt; physics::time::Interval &gt; ostk::astrodynamics::access::Generator::computePreciseCrossings</definition>
        <argsstring>(const Array&lt; physics::time::Interval &gt; &amp;accessIntervals, const physics::time::Interval &amp;anAnalysisInterval, const Vector3d &amp;fromPositionCoordinate_ITRF, const Trajectory &amp;aToTrajectory, const AccessTarget &amp;anAccessTarget) const</argsstring>
        <name>computePreciseCrossings</name>
        <param>
          <type>const Array&lt; physics::time::Interval &gt; &amp;</type>
          <declname>accessIntervals</declname>
        </param>
        <param>
          <type>const physics::time::Interval &amp;</type>
          <declname>anAnalysisInterval</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>fromPositionCoordinate_ITRF</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aToTrajectory</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1access_1_1_access_target" kindref="compound">AccessTarget</ref> &amp;</type>
          <declname>anAccessTarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="264" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="738" bodyend="898"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1af8dc7f2e1d27630a6421a97427c45327" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Array&lt; physics::time::Interval &gt;</type>
        <definition>Array&lt; physics::time::Interval &gt; ostk::astrodynamics::access::Generator::ComputeIntervals</definition>
        <argsstring>(const VectorXi &amp;inAccess, const Array&lt; Instant &gt; &amp;instants)</argsstring>
        <name>ComputeIntervals</name>
        <param>
          <type>const VectorXi &amp;</type>
          <declname>inAccess</declname>
        </param>
        <param>
          <type>const Array&lt; Instant &gt; &amp;</type>
          <declname>instants</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="272" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="900" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a6da150a5ee57db4e9175d0c63c97fecc" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref></type>
        <definition>Access ostk::astrodynamics::access::Generator::GenerateAccess</definition>
        <argsstring>(const physics::time::Interval &amp;anAccessInterval, const physics::time::Interval &amp;aGlobalInterval, const Trajectory &amp;aFromTrajectory, const Trajectory &amp;aToTrajectory, const Duration &amp;aTolerance)</argsstring>
        <name>GenerateAccess</name>
        <param>
          <type>const physics::time::Interval &amp;</type>
          <declname>anAccessInterval</declname>
        </param>
        <param>
          <type>const physics::time::Interval &amp;</type>
          <declname>aGlobalInterval</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aFromTrajectory</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aToTrajectory</declname>
        </param>
        <param>
          <type>const Duration &amp;</type>
          <declname>aTolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="274" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="943" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1ab77bb1d3c4895a42212585640ca610e8" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Instant</type>
        <definition>Instant ostk::astrodynamics::access::Generator::FindTimeOfClosestApproach</definition>
        <argsstring>(const physics::time::Interval &amp;anAccessInterval, const Trajectory &amp;aFromTrajectory, const Trajectory &amp;aToTrajectory, const Duration &amp;aTolerance)</argsstring>
        <name>FindTimeOfClosestApproach</name>
        <param>
          <type>const physics::time::Interval &amp;</type>
          <declname>anAccessInterval</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aFromTrajectory</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aToTrajectory</declname>
        </param>
        <param>
          <type>const Duration &amp;</type>
          <declname>aTolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="282" column="20" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="980" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1a606262101c72820e55493026dc611f14" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Angle</type>
        <definition>Angle ostk::astrodynamics::access::Generator::CalculateElevationAt</definition>
        <argsstring>(const Instant &amp;anInstant, const Trajectory &amp;aFromTrajectory, const Trajectory &amp;aToTrajectory)</argsstring>
        <name>CalculateElevationAt</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aFromTrajectory</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aToTrajectory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="289" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="1071" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1access_1_1_generator_1ae1a56ca0b66c094eb9c29ae495edb9b1" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AER</type>
        <definition>AER ostk::astrodynamics::access::Generator::CalculateAer</definition>
        <argsstring>(const Instant &amp;anInstant, const Position &amp;aFromPosition, const Position &amp;aToPosition, const Shared&lt; const Celestial &gt; &amp;anEarthSPtr)</argsstring>
        <name>CalculateAer</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const Position &amp;</type>
          <declname>aFromPosition</declname>
        </param>
        <param>
          <type>const Position &amp;</type>
          <declname>aToPosition</declname>
        </param>
        <param>
          <type>const Shared&lt; const Celestial &gt; &amp;</type>
          <declname>anEarthSPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="293" column="16" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access/Generator.cpp" bodystart="1085" bodyend="1103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="189" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" bodystart="188" bodyend="299"/>
    <listofallmembers>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a93f6d19a83c46a7d8c00a4b0dcb1faa3" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>accessFilter_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1ae1a56ca0b66c094eb9c29ae495edb9b1" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>CalculateAer</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a606262101c72820e55493026dc611f14" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>CalculateElevationAt</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a214d29186ea54c3074d81bf9a6603876" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>computeAccesses</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1aba3b221a4227e0b06a8b10bb1d2ac248" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>computeAccesses</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1adbdbe36beb8bbf63d1045c220058289d" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>computeAccessesForFixedTargets</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a3730059acc84fc8b0fe8eadbd6a7e4c7" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>computeAccessesForTrajectoryTarget</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1af8dc7f2e1d27630a6421a97427c45327" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>ComputeIntervals</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a03c578cbf4f653ef69892b318754a8ea" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>computePreciseCrossings</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1ad018f05018c20eb8fba73c35b4ddf191" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>environment_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1ab77bb1d3c4895a42212585640ca610e8" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>FindTimeOfClosestApproach</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a6da150a5ee57db4e9175d0c63c97fecc" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>GenerateAccess</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a52230a41412b3ce41b8688a8b0a6785e" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>generateAccessesFromIntervals</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1afb8ddb0c56e350fc20de4824c5120169" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>Generator</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1aa1ad7dc07137fa64d62992c3cf9f85ab" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>getAccessFilter</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1ae2897d02ad4d74f277c6e6cd7fc09b5b" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>getConditionFunction</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1ad19f8b17276b76b3c80af94fa02c4a41" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>getStateFilter</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a2adf2bc167b4976cfa0a2a62f5898f11" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>getStep</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1ae922b298068bb965e0b45f605b5cbb43" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>getTolerance</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a1e243fd78e139af1f1cabd1729fc251a" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>isDefined</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1aca6b21db7ceaa2c23d5c59a79ac4eef0" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>setAccessFilter</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1ab71661ad9230d54a449e7df756d2d14a" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>setStateFilter</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a5f3b9a1e35e1fb102c0a8c84e4f6aec5" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>setStep</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a3cf72f1f58dbb09c81965e4b5efc2587" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>setTolerance</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a79dd96cb36db13816b88cbc6f291fd75" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>stateFilter_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1adbef215f83d693acb384956f04ca51e1" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>step_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a3ee21269375995ed6e24cdc369149468" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>tolerance_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1access_1_1_generator_1a1d28164d6563e8b92d7f20987d20df51" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::access::Generator</scope><name>Undefined</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
