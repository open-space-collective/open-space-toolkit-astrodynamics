<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceostk_1_1astro" kind="namespace" language="C++">
    <compoundname>ostk::astro</compoundname>
    <innerclass refid="classostk_1_1astro_1_1_access" prot="public">ostk::astro::Access</innerclass>
    <innerclass refid="classostk_1_1astro_1_1_dynamics" prot="public">ostk::astro::Dynamics</innerclass>
    <innerclass refid="classostk_1_1astro_1_1_event_condition" prot="public">ostk::astro::EventCondition</innerclass>
    <innerclass refid="classostk_1_1astro_1_1_guidance_law" prot="public">ostk::astro::GuidanceLaw</innerclass>
    <innerclass refid="classostk_1_1astro_1_1_root_solver" prot="public">ostk::astro::RootSolver</innerclass>
    <innerclass refid="classostk_1_1astro_1_1_trajectory" prot="public">ostk::astro::Trajectory</innerclass>
    <innernamespace refid="namespaceostk_1_1astro_1_1access">ostk::astro::access</innernamespace>
    <innernamespace refid="namespaceostk_1_1astro_1_1conjunction">ostk::astro::conjunction</innernamespace>
    <innernamespace refid="namespaceostk_1_1astro_1_1dynamics">ostk::astro::dynamics</innernamespace>
    <innernamespace refid="namespaceostk_1_1astro_1_1eventcondition">ostk::astro::eventcondition</innernamespace>
    <innernamespace refid="namespaceostk_1_1astro_1_1flight">ostk::astro::flight</innernamespace>
    <innernamespace refid="namespaceostk_1_1astro_1_1guidancelaw">ostk::astro::guidancelaw</innernamespace>
    <innernamespace refid="namespaceostk_1_1astro_1_1solvers">ostk::astro::solvers</innernamespace>
    <innernamespace refid="namespaceostk_1_1astro_1_1trajectory">ostk::astro::trajectory</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceostk_1_1astro_1ad6bf403749e98996e2e56cd6dc8cc848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ostk::astro::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const Access &amp;anAccess)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1_access" kindref="compound">Access</ref> &amp;</type>
          <declname>anAccess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OpenSpaceToolkit/Astrodynamics/Access.cpp" line="58" column="1" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Access.cpp" bodystart="58" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostk_1_1astro_1ac51b4760b5d319009939b2c94499fc8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ostk::astro::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const Dynamics &amp;aDynamics)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1_dynamics" kindref="compound">Dynamics</ref> &amp;</type>
          <declname>aDynamics</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>Dynamics(...)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aDynamics</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classostk_1_1astro_1_1_dynamics" kindref="compound">Dynamics</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OpenSpaceToolkit/Astrodynamics/Dynamics.cpp" line="52" column="1" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Dynamics.cpp" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostk_1_1astro_1a8d5810d67d4d17063ace5ff0c7b8c5a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ostk::astro::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const EventCondition &amp;anEventCondition)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1_event_condition" kindref="compound">EventCondition</ref> &amp;</type>
          <declname>anEventCondition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>EventCondition(...)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anEventCondition</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="classostk_1_1astro_1_1_event_condition" kindref="compound">EventCondition</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OpenSpaceToolkit/Astrodynamics/EventCondition.cpp" line="84" column="1" bodyfile="src/OpenSpaceToolkit/Astrodynamics/EventCondition.cpp" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostk_1_1astro_1a3dc0583ea98f0d84341e53b7a22e9215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ostk::astro::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const GuidanceLaw &amp;aGuidanceLaw)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1_guidance_law" kindref="compound">GuidanceLaw</ref> &amp;</type>
          <declname>aGuidanceLaw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>GuidanceLaw(...)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aGuidanceLaw</parametername>
</parameternamelist>
<parameterdescription>
<para>A guidance Law </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OpenSpaceToolkit/Astrodynamics/GuidanceLaw.cpp" line="18" column="1" bodyfile="src/OpenSpaceToolkit/Astrodynamics/GuidanceLaw.cpp" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostk_1_1astro_1af133b774c97fb149321a50874009a218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ostk::astro::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const RootSolver &amp;aRootSolver)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1_root_solver" kindref="compound">RootSolver</ref> &amp;</type>
          <declname>aRootSolver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aRootSolver</parametername>
</parameternamelist>
<parameterdescription>
<para>A Root Solver </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OpenSpaceToolkit/Astrodynamics/RootSolver.cpp" line="23" column="1" bodyfile="src/OpenSpaceToolkit/Astrodynamics/RootSolver.cpp" bodystart="23" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostk_1_1astro_1a0cb767c3814a31416e0491406bc56ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ostk::astro::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const Trajectory &amp;aTrajectory)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aTrajectory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>Trajectory(...)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aTrajectory</parametername>
</parameternamelist>
<parameterdescription>
<para>A trajectory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OpenSpaceToolkit/Astrodynamics/Trajectory.cpp" line="57" column="1" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory.cpp" bodystart="57" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/OpenSpaceToolkit/Astrodynamics/Access/Generator.hpp" line="26" column="1"/>
  </compounddef>
</doxygen>
