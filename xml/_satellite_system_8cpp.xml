<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_satellite_system_8cpp" kind="file" language="C++">
    <compoundname>SatelliteSystem.cpp</compoundname>
    <includes local="no">OpenSpaceToolkit/Core/Error.hpp</includes>
    <includes local="no">OpenSpaceToolkit/Core/Utilities.hpp</includes>
    <includes refid="_satellite_system_8hpp" local="no">OpenSpaceToolkit/Astrodynamics/Flight/System/SatelliteSystem.hpp</includes>
    <incdepgraph>
      <node id="14">
        <label>OpenSpaceToolkit/Physics/Data/Scalar.hpp</label>
      </node>
      <node id="1">
        <label>src/OpenSpaceToolkit/Astrodynamics/Flight/System/SatelliteSystem.cpp</label>
        <link refid="_satellite_system_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>OpenSpaceToolkit/Physics/Data/Direction.hpp</label>
      </node>
      <node id="12">
        <label>OpenSpaceToolkit/Astrodynamics/Flight/System/PropulsionSystem.hpp</label>
        <link refid="_propulsion_system_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>OpenSpaceToolkit/Astrodynamics/Flight/System/SatelliteSystem.hpp</label>
        <link refid="_satellite_system_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>OpenSpaceToolkit/Physics/Units/Derived.hpp</label>
      </node>
      <node id="15">
        <label>OpenSpaceToolkit/Physics/Unit.hpp</label>
      </node>
      <node id="6">
        <label>OpenSpaceToolkit/Mathematics/Geometry/3D/Objects/Composite.hpp</label>
      </node>
      <node id="11">
        <label>OpenSpaceToolkit/Astrodynamics/Flight/System.hpp</label>
        <link refid="_system_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>OpenSpaceToolkit/Mathematics/Geometry/3D/Objects/Cuboid.hpp</label>
      </node>
      <node id="2">
        <label>OpenSpaceToolkit/Core/Error.hpp</label>
      </node>
      <node id="5">
        <label>OpenSpaceToolkit/Core/Types/Real.hpp</label>
      </node>
      <node id="8">
        <label>OpenSpaceToolkit/Mathematics/Geometry/3D/Objects/Point.hpp</label>
      </node>
      <node id="10">
        <label>OpenSpaceToolkit/Physics/Units/Mass.hpp</label>
      </node>
      <node id="17">
        <label>OpenSpaceToolkit/Physics/Units/Time.hpp</label>
      </node>
      <node id="3">
        <label>OpenSpaceToolkit/Core/Utilities.hpp</label>
      </node>
      <node id="9">
        <label>OpenSpaceToolkit/Mathematics/Objects/Vector.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceostk">ostk</innernamespace>
    <innernamespace refid="namespaceostk_1_1astro">ostk::astro</innernamespace>
    <innernamespace refid="namespaceostk_1_1astro_1_1flight">ostk::astro::flight</innernamespace>
    <innernamespace refid="namespaceostk_1_1astro_1_1flight_1_1system">ostk::astro::flight::system</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OpenSpaceToolkit/Core/Error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OpenSpaceToolkit/Core/Utilities.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_satellite_system_8hpp" kindref="compound">OpenSpaceToolkit/Astrodynamics/Flight/System/SatelliteSystem.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceostk" kindref="compound">ostk</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">astro</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">flight</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">system</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a82127fe5971221429b8d18fcca9200f1" kindref="member">SatelliteSystem::SatelliteSystem</ref>(</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mass&amp;<sp/>aDryMass,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Composite&amp;<sp/>aSatelliteGeometry,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix3d&amp;<sp/>anInertiaTensor,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real&amp;<sp/>aCrossSectionalSurfaceArea,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real&amp;<sp/>aDragCoefficient,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PropulsionSystem&amp;<sp/>aPropulsionSystem</highlight></codeline>
<codeline lineno="24"><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>System(aDryMass,<sp/>aSatelliteGeometry),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inertiaTensor_(anInertiaTensor),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>crossSectionalSurfaceArea_(aCrossSectionalSurfaceArea),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dragCoefficient_(aDragCoefficient),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>propulsionSystem_(aPropulsionSystem)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a9d49e1a03773c4d78ba6dc579b24b713" kindref="member">SatelliteSystem::~SatelliteSystem</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">SatelliteSystem*<sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1ab72eb53f29c3f6f9839eaefd5667f218" kindref="member">SatelliteSystem::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="36"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a82127fe5971221429b8d18fcca9200f1" kindref="member">SatelliteSystem</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1aa74775f808a686c2452a9868d72ab5ef" kindref="member">SatelliteSystem::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SatelliteSystem&amp;<sp/>aSatelliteSystem)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="41"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!this-&gt;<ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a6d10fc37776cc87a74fe8b7e2ccb9843" kindref="member">isDefined</ref>())<sp/>||<sp/>(!aSatelliteSystem.isDefined()))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(System::operator==(aSatelliteSystem))<sp/>&amp;&amp;<sp/>(inertiaTensor_<sp/>==<sp/>aSatelliteSystem.inertiaTensor_)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(crossSectionalSurfaceArea_<sp/>==<sp/>aSatelliteSystem.crossSectionalSurfaceArea_)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dragCoefficient_<sp/>==<sp/>aSatelliteSystem.dragCoefficient_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propulsionSystem_<sp/>==<sp/>aSatelliteSystem.propulsionSystem_);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a67e71754b00cc21140555fd3632705e0" kindref="member">SatelliteSystem::operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SatelliteSystem&amp;<sp/>aSatelliteSystem)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="54"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!((*this)<sp/>==<sp/>aSatelliteSystem);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespaceostk_1_1astro_1_1flight_1_1system_1af3fe1649daf2806bc7100764bdef1f3b" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>anOutputStream,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SatelliteSystem&amp;<sp/>aSatelliteSystem)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>aSatelliteSystem.print(anOutputStream);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>anOutputStream;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a6d10fc37776cc87a74fe8b7e2ccb9843" kindref="member">SatelliteSystem::isDefined</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="66"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1astro_1_1flight_1_1_system_1a45d6ad6bca50c0d9cb9b50135ed2efa3" kindref="member">System::isDefined</ref>()<sp/>&amp;&amp;<sp/>inertiaTensor_.isDefined()<sp/>&amp;&amp;<sp/>crossSectionalSurfaceArea_.isDefined()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragCoefficient_.isDefined()<sp/>&amp;&amp;<sp/>propulsionSystem_.<ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_propulsion_system_1a98e1b63a5d28bcf49e725df61cdae23b" kindref="member">isDefined</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a0d4ca06c426773f667018581945dbf57" kindref="member">SatelliteSystem::print</ref>(std::ostream&amp;<sp/>anOutputStream,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>displayDecorator)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>displayDecorator<sp/>?<sp/>ostk::core::utils::Print::Header(anOutputStream,<sp/></highlight><highlight class="stringliteral">&quot;Satellite<sp/>System&quot;</highlight><highlight class="normal">)<sp/>:<sp/>void();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classostk_1_1astro_1_1flight_1_1_system_1a24d1aacf9355f5ee56fa56eeabe231ab" kindref="member">System::print</ref>(anOutputStream,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>ostk::core::utils::Print::Line(anOutputStream)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Inertia<sp/>Tensor:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(inertiaTensor_.isDefined()<sp/>?<sp/>inertiaTensor_.toString()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>ostk::core::utils::Print::Line(anOutputStream)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cross<sp/>Sectional<sp/>Surface<sp/>Area:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(crossSectionalSurfaceArea_.isDefined()<sp/>?<sp/>crossSectionalSurfaceArea_.toString()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>ostk::core::utils::Print::Line(anOutputStream)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Drag<sp/>Coefficient:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(dragCoefficient_.isDefined()<sp/>?<sp/>dragCoefficient_.toString()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>ostk::core::utils::Print::Separator(anOutputStream,<sp/></highlight><highlight class="stringliteral">&quot;PropulsionSystem&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>propulsionSystem_.<ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_propulsion_system_1a98e1b63a5d28bcf49e725df61cdae23b" kindref="member">isDefined</ref>()<sp/>?<sp/>propulsionSystem_.<ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_propulsion_system_1ad0d3d57d2cb264ccfb6fa99d6647c245" kindref="member">print</ref>(anOutputStream,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>:<sp/>void();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>displayDecorator<sp/>?<sp/>ostk::core::utils::Print::Footer(anOutputStream)<sp/>:<sp/>void();</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PropulsionSystem&amp;<sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1abe34f4724424acccb7e9a2033c72d133" kindref="member">SatelliteSystem::accessPropulsionSystem</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!propulsionSystem_.<ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_propulsion_system_1a98e1b63a5d28bcf49e725df61cdae23b" kindref="member">isDefined</ref>())</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ostk::core::error::runtime::Undefined(</highlight><highlight class="stringliteral">&quot;Propulsion<sp/>System&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;propulsionSystem_;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">Matrix3d<sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a5b4919deec7bbc637878f553542490b2" kindref="member">SatelliteSystem::getInertiaTensor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="102"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inertiaTensor_.isDefined())</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ostk::core::error::runtime::Undefined(</highlight><highlight class="stringliteral">&quot;Inertia<sp/>Tensor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inertiaTensor_;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">Real<sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1ac857e04d890280e233c89037a61044d9" kindref="member">SatelliteSystem::getCrossSectionalSurfaceArea</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="112"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crossSectionalSurfaceArea_.isDefined())</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ostk::core::error::runtime::Undefined(</highlight><highlight class="stringliteral">&quot;Cross-Sectional<sp/>Surface<sp/>Area&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crossSectionalSurfaceArea_;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">Real<sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a4e6dcdae45be7ead5fe0924a540ae2cd" kindref="member">SatelliteSystem::getDragCoefficient</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="122"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dragCoefficient_.isDefined())</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ostk::core::error::runtime::Undefined(</highlight><highlight class="stringliteral">&quot;Drag<sp/>Coefficient&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dragCoefficient_;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">PropulsionSystem<sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a3fd043e5e7c2dd4bcf19f00d4c9b429d" kindref="member">SatelliteSystem::getPropulsionSystem</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="132"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1abe34f4724424acccb7e9a2033c72d133" kindref="member">accessPropulsionSystem</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">SatelliteSystem<sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a71f5822114d8ff43d11a33bdf982aaa7" kindref="member">SatelliteSystem::Undefined</ref>()</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass::Undefined(),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Composite::Undefined(),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3d::Undefined(),</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real::Undefined(),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real::Undefined(),</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_propulsion_system_1a1bccf402afccdcfdaf7445fc25e64bf4" kindref="member">PropulsionSystem::Undefined</ref>(),</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">SatelliteSystem<sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_satellite_system_1a586f05b15d55e12722c5a2eaef6d3cd6" kindref="member">SatelliteSystem::Default</ref>()</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Composite<sp/>satelliteGeometry(Cuboid(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.0,<sp/>0.0,<sp/>0.0},<sp/>{Vector3d<sp/>{1.0,<sp/>0.0,<sp/>0.0},<sp/>Vector3d<sp/>{0.0,<sp/>1.0,<sp/>0.0},<sp/>Vector3d<sp/>{0.0,<sp/>0.0,<sp/>1.0}},<sp/>{1.0,<sp/>2.0,<sp/>3.0}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass::Kilograms(100.0),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>satelliteGeometry,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix3d::Identity(),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.2,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classostk_1_1astro_1_1flight_1_1system_1_1_propulsion_system_1a8b124c884a5b67047c132f9f84ac5ba2" kindref="member">PropulsionSystem::Default</ref>(),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>flight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>astro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ostk</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/OpenSpaceToolkit/Astrodynamics/Flight/System/SatelliteSystem.cpp"/>
  </compounddef>
</doxygen>
