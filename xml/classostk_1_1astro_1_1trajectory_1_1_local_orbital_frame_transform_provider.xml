<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider" kind="class" language="C++" prot="public">
    <compoundname>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Provider</basecompoundref>
    <includes refid="_local_orbital_frame_transform_provider_8hpp" local="no">LocalOrbitalFrameTransformProvider.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62c" prot="public" static="no" strong="yes">
        <type></type>
        <name>Type</name>
        <enumvalue id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62caec0fc0100c4fc1ce4eea230c3dc10360" prot="public">
          <name>Undefined</name>
          <briefdescription>
<para>Undefined frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62cacd3459b28418fa8fa75ffaba4f3e7c74" prot="public">
          <name>NED</name>
          <briefdescription>
<para>North-East-Down (NED) frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62cacdfe4a5ed313c123b78c17d455cfa94f" prot="public">
          <name>LVLH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Local Vertical, Local Horizontal (LVLH) frame (X axis aligned with position, Z axis aligned with orbital momentum) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62cae01a717c5a8a11cf57f7fdcb96aedc9c" prot="public">
          <name>VVLH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Vehicle Velocity, Local Horizontal (VVLH) frame (Z axis aligned with opposite of position, Y axis aligned with opposite of orbital momentum) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62ca9f24a174bf2de776f4f87caef847746f" prot="public">
          <name>LVLHGD</name>
          <briefdescription>
<para>Local Vertical, Local Horizontal GeoDetic (LVLHGD) frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62ca4f190ed692b3a94eb49da59c497c7f55" prot="public">
          <name>QSW</name>
          <briefdescription>
<para>QSW frame (X axis aligned with position, Z axis aligned with orbital momentum) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62ca6d951949ba8af28fa54a8629ec0f8f17" prot="public">
          <name>TNW</name>
          <briefdescription>
<para>TNW frame (X axis aligned with velocity, Z axis aligned with orbital momentum) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62cac6a33911cc53df9bdb84aac8d86a0565" prot="public">
          <name>VNC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Velocity - Normal - Co-normal (VNC) frame (X axis aligned with velocity, Y axis aligned with orbital momentum) </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" line="40" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" bodystart="39" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1aa18cb400e149ce307f5d4159505212e0" prot="private" static="no" mutable="no">
        <type>Transform</type>
        <definition>Transform ostk::astro::trajectory::LocalOrbitalFrameTransformProvider::transform_</definition>
        <argsstring></argsstring>
        <name>transform_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" line="97" column="15" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a129f9881db5f81333f46b037f05af528" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider::~LocalOrbitalFrameTransformProvider</definition>
        <argsstring>() override</argsstring>
        <name>~LocalOrbitalFrameTransformProvider</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" line="55" column="13" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.cpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1ad820a99765854add9ad553595df1fced" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider" kindref="compound">LocalOrbitalFrameTransformProvider</ref> *</type>
        <definition>LocalOrbitalFrameTransformProvider * ostk::astro::trajectory::LocalOrbitalFrameTransformProvider::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <briefdescription>
<para>Clone. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to local orbital frame transform provider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" line="60" column="48" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1aab943c081381326981b8cdda21b73857" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ostk::astro::trajectory::LocalOrbitalFrameTransformProvider::isDefined</definition>
        <argsstring>() const override</argsstring>
        <name>isDefined</name>
        <briefdescription>
<para>Check if local orbital frame transform provider is defined. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if local orbital frame transform provider is defined </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" line="65" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a3e76bcdc1101fda5c5eb8ce1ac6a832f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Transform</type>
        <definition>Transform ostk::astro::trajectory::LocalOrbitalFrameTransformProvider::getTransformAt</definition>
        <argsstring>(const Instant &amp;anInstant) const override</argsstring>
        <name>getTransformAt</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <briefdescription>
<para>Get the transform of the local orbital frame transform provider at a given instant. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transform from the provider at provided instant </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" line="72" column="23" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.cpp" bodystart="58" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1af1698555e739dbafa37f81c538f5e1dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Shared&lt; const <ref refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider" kindref="compound">LocalOrbitalFrameTransformProvider</ref> &gt;</type>
        <definition>Shared&lt; const LocalOrbitalFrameTransformProvider &gt; ostk::astro::trajectory::LocalOrbitalFrameTransformProvider::Construct</definition>
        <argsstring>(const LocalOrbitalFrameTransformProvider::Type &amp;aType, const Instant &amp;anInstant, const Vector3d &amp;aPosition, const Vector3d &amp;aVelocity)</argsstring>
        <name>Construct</name>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62c" kindref="member">LocalOrbitalFrameTransformProvider::Type</ref> &amp;</type>
          <declname>aType</declname>
        </param>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>aPosition</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>aVelocity</declname>
        </param>
        <briefdescription>
<para>Construct a local orbital frame transform provider shared pointed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aType</parametername>
</parameternamelist>
<parameterdescription>
<para>A local orbital frame provider type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>A position vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>A velocity vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The shared pointer to the local orbital frame transform provider constructed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" line="82" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.cpp" bodystart="33" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a07943e3349cabad9efd464a6d71c32fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String ostk::astro::trajectory::LocalOrbitalFrameTransformProvider::StringFromType</definition>
        <argsstring>(const LocalOrbitalFrameTransformProvider::Type &amp;aType)</argsstring>
        <name>StringFromType</name>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62c" kindref="member">LocalOrbitalFrameTransformProvider::Type</ref> &amp;</type>
          <declname>aType</declname>
        </param>
        <briefdescription>
<para>Convert local orbital frame transform provider type to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aType</parametername>
</parameternamelist>
<parameterdescription>
<para>A local orbital frame provider type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The string corresponding to the local orbital frame transform provider type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" line="94" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.cpp" bodystart="69" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1ab27862aa0724779f43e3afddeca16425" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider::LocalOrbitalFrameTransformProvider</definition>
        <argsstring>(const Transform &amp;aTransform)</argsstring>
        <name>LocalOrbitalFrameTransformProvider</name>
        <param>
          <type>const Transform &amp;</type>
          <declname>aTransform</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aTransform</parametername>
</parameternamelist>
<parameterdescription>
<para>A transform</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A local orbital frame transform provider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" line="104" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a06c52f34d81be927a36cb316ea3c31d9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Transform</type>
        <definition>Transform ostk::astro::trajectory::LocalOrbitalFrameTransformProvider::generateTransform</definition>
        <argsstring>(const LocalOrbitalFrameTransformProvider::Type &amp;aType, const Instant &amp;anInstant, const Vector3d &amp;aPosition, const Vector3d &amp;aVelocity)</argsstring>
        <name>generateTransform</name>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62c" kindref="member">LocalOrbitalFrameTransformProvider::Type</ref> &amp;</type>
          <declname>aType</declname>
        </param>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>aPosition</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>aVelocity</declname>
        </param>
        <briefdescription>
<para>Generate a transform based on current state and LOF type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aType</parametername>
</parameternamelist>
<parameterdescription>
<para>A local orbital frame provider type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>A position vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>A velocity vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transform generated </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" line="114" column="22" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.cpp" bodystart="110" bodyend="261"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Local orbital frame transform provider, frame provider. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>Generates a specific transform based on instant, position, velocity and a LOF type. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</label>
        <link refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Provider</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</label>
        <link refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Provider</label>
      </node>
    </collaborationgraph>
    <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" line="37" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/LocalOrbitalFrameTransformProvider.hpp" bodystart="36" bodyend="120"/>
    <listofallmembers>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1ad820a99765854add9ad553595df1fced" prot="public" virt="virtual"><scope>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</scope><name>clone</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1af1698555e739dbafa37f81c538f5e1dc" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</scope><name>Construct</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a06c52f34d81be927a36cb316ea3c31d9" prot="private" virt="non-virtual"><scope>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</scope><name>generateTransform</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a3e76bcdc1101fda5c5eb8ce1ac6a832f" prot="public" virt="virtual"><scope>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</scope><name>getTransformAt</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1aab943c081381326981b8cdda21b73857" prot="public" virt="virtual"><scope>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</scope><name>isDefined</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1ab27862aa0724779f43e3afddeca16425" prot="private" virt="non-virtual"><scope>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</scope><name>LocalOrbitalFrameTransformProvider</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a07943e3349cabad9efd464a6d71c32fa" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</scope><name>StringFromType</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1aa18cb400e149ce307f5d4159505212e0" prot="private" virt="non-virtual"><scope>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</scope><name>transform_</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a0622a7a71418e856d6ed1e8bb4f7c62c" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</scope><name>Type</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_local_orbital_frame_transform_provider_1a129f9881db5f81333f46b037f05af528" prot="public" virt="virtual"><scope>ostk::astro::trajectory::LocalOrbitalFrameTransformProvider</scope><name>~LocalOrbitalFrameTransformProvider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
