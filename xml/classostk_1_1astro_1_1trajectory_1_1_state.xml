<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1astro_1_1trajectory_1_1_state" kind="class" language="C++" prot="public">
    <compoundname>ostk::astro::trajectory::State</compoundname>
    <includes refid="_trajectory_2_state_8hpp" local="no">State.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1astro_1_1trajectory_1_1_state_1ab5a639929e70f115a012685d8845a04e" prot="private" static="no" mutable="no">
        <type>Instant</type>
        <definition>Instant ostk::astro::trajectory::State::instant_</definition>
        <argsstring></argsstring>
        <name>instant_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="254" column="13" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astro_1_1trajectory_1_1_state_1a417019acc4c8d4e8f6e8fe709bd04d37" prot="private" static="no" mutable="no">
        <type>VectorXd</type>
        <definition>VectorXd ostk::astro::trajectory::State::coordinates_</definition>
        <argsstring></argsstring>
        <name>coordinates_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="255" column="14" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astro_1_1trajectory_1_1_state_1a5815a2985dd598da916c4224385fe7a2" prot="private" static="no" mutable="no">
        <type>Shared&lt; const Frame &gt;</type>
        <definition>Shared&lt;const Frame&gt; ostk::astro::trajectory::State::frameSPtr_</definition>
        <argsstring></argsstring>
        <name>frameSPtr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="256" column="12" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astro_1_1trajectory_1_1_state_1a5ccd00bc97489fac47f452c545917927" prot="private" static="no" mutable="no">
        <type>Shared&lt; const <ref refid="classostk_1_1astro_1_1trajectory_1_1state_1_1_coordinates_broker" kindref="compound">CoordinatesBroker</ref> &gt;</type>
        <definition>Shared&lt;const CoordinatesBroker&gt; ostk::astro::trajectory::State::coordinatesBrokerSPtr_</definition>
        <argsstring></argsstring>
        <name>coordinatesBrokerSPtr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="257" column="12" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1abbaa96f2d2b7f388eb073daab94202b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astro::trajectory::State::State</definition>
        <argsstring>(const Instant &amp;anInstant, const VectorXd &amp;aCoordinates, const Shared&lt; const Frame &gt; &amp;aFrameSPtr, const Shared&lt; const CoordinatesBroker &gt; &amp;aCoordinatesBrokerSPtr)</argsstring>
        <name>State</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const VectorXd &amp;</type>
          <declname>aCoordinates</declname>
        </param>
        <param>
          <type>const Shared&lt; const Frame &gt; &amp;</type>
          <declname>aFrameSPtr</declname>
        </param>
        <param>
          <type>const Shared&lt; const <ref refid="classostk_1_1astro_1_1trajectory_1_1state_1_1_coordinates_broker" kindref="compound">CoordinatesBroker</ref> &gt; &amp;</type>
          <declname>aCoordinatesBrokerSPtr</declname>
        </param>
        <briefdescription>
<para>Constructor with a pre-defined Coordinates Broker. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCoordinates</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinates at the instant in International System of Units </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aFrameSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference frame in which the coordinates are referenced to and resolved in </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCoordinatesBrokerSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinates broker associated to the coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="55" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="28" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a9774b1ddfacd2707986066f5f0650368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astro::trajectory::State::State</definition>
        <argsstring>(const Instant &amp;anInstant, const VectorXd &amp;aCoordinates, const Shared&lt; const Frame &gt; &amp;aFrameSPtr, const Array&lt; Shared&lt; const CoordinatesSubset &gt;&gt; &amp;aCoordinatesSubsetsArray)</argsstring>
        <name>State</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const VectorXd &amp;</type>
          <declname>aCoordinates</declname>
        </param>
        <param>
          <type>const Shared&lt; const Frame &gt; &amp;</type>
          <declname>aFrameSPtr</declname>
        </param>
        <param>
          <type>const Array&lt; Shared&lt; const <ref refid="classostk_1_1astro_1_1trajectory_1_1state_1_1_coordinates_subset" kindref="compound">CoordinatesSubset</ref> &gt;&gt; &amp;</type>
          <declname>aCoordinatesSubsetsArray</declname>
        </param>
        <briefdescription>
<para>Constructor. This constructor makes a new Coordinates Broker under the hood for every <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref>. When possible, users should prefer passing in an existing Coordinates Broker or using a <ref refid="classostk_1_1astro_1_1trajectory_1_1_state_builder" kindref="compound">StateBuilder</ref> to reduce memory footprint when constructing many states. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCoordinates</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinates at the instant in International System of Units </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aFrameSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference frame in which the coordinates are referenced to and resolved in </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCoordinatesSubsetsArray</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinates subsets associated to the coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="71" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="45" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a01ef71cfac563cfbc8b5082ccd379227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astro::trajectory::State::State</definition>
        <argsstring>(const Instant &amp;anInstant, const Position &amp;aPosition, const Velocity &amp;aVelocity, const Quaternion &amp;anAttitude, const Vector3d &amp;anAngularVelocity, const Shared&lt; const Frame &gt; &amp;anAttitudeReferenceFrame)</argsstring>
        <name>State</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const Position &amp;</type>
          <declname>aPosition</declname>
        </param>
        <param>
          <type>const Velocity &amp;</type>
          <declname>aVelocity</declname>
        </param>
        <param>
          <type>const Quaternion &amp;</type>
          <declname>anAttitude</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>anAngularVelocity</declname>
        </param>
        <param>
          <type>const Shared&lt; const Frame &gt; &amp;</type>
          <declname>anAttitudeReferenceFrame</declname>
        </param>
        <briefdescription>
<para>Utility constructor for Position/Velocity/Attitude/Angular Velocity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>The Cartesian position at the instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The Cartesian velocity at the instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAttitude</parametername>
</parameternamelist>
<parameterdescription>
<para>The attitude at the instant, representing the rotation required to go from the attitude reference frame to the satellite body frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAngularVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The angular velocity at the instant, representing the angular velocity of the satellite body frame with respect to the attitude frame, expressed, in satellite body frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAttitudeReferenceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The attitude reference frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="88" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="96" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a8628aceae903c9492f0fb269888434b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astro::trajectory::State::State</definition>
        <argsstring>(const Instant &amp;anInstant, const Position &amp;aPosition, const Velocity &amp;aVelocity)</argsstring>
        <name>State</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const Position &amp;</type>
          <declname>aPosition</declname>
        </param>
        <param>
          <type>const Velocity &amp;</type>
          <declname>aVelocity</declname>
        </param>
        <briefdescription>
<para>Utility constructor for Position/Velocity only. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>The cartesian position at the instant in International System of Units </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The cartesian velocity at the instant in International System of Units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="102" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="58" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1ac8657234876a3e043bcdfa7f88470e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astro::trajectory::State::State</definition>
        <argsstring>(const State &amp;aState)</argsstring>
        <name>State</name>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>An existing <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="107" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="155" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1ac4281382f859c517dd6233f341cdac66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
        <definition>State &amp; ostk::astro::trajectory::State::operator=</definition>
        <argsstring>(const State &amp;aState)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Copy-assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The modified <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="113" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="163" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1acd68798b63a7e3a89e61b4b668d8dbb0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astro::trajectory::State::operator==</definition>
        <argsstring>(const State &amp;aState) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> to compare to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the States are equal, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="119" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="175" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a53ac2b13092bc7777efa14362fec4c46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astro::trajectory::State::operator!=</definition>
        <argsstring>(const State &amp;aState) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Inequality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> to compare to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the States are not equal, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="125" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a8d8ff34816c5e4895f9274fc06dbb799" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref></type>
        <definition>State ostk::astro::trajectory::State::operator+</definition>
        <argsstring>(const State &amp;aState) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Addition operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> to add to this <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sum of the two States </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="131" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="218" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1abd0979467d66ca07b86d5405255d26ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref></type>
        <definition>State ostk::astro::trajectory::State::operator-</definition>
        <argsstring>(const State &amp;aState) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Subtraction operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> to subtract from this <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The difference between the two States </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="137" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="263" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a09966efb00e3206cc2d20935c55658ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astro::trajectory::State::isDefined</definition>
        <argsstring>() const</argsstring>
        <name>isDefined</name>
        <briefdescription>
<para>Check if the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> is defined. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> is defined, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="149" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="315" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1afc21870411eef52ce1293e31eda16d3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Instant &amp;</type>
        <definition>const Instant &amp; ostk::astro::trajectory::State::accessInstant</definition>
        <argsstring>() const</argsstring>
        <name>accessInstant</name>
        <briefdescription>
<para>Accessor for the instant. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The instant </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="154" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="321" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a2490cdc545c5bb4d23bd14e8eb267f9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Shared&lt; const Frame &gt;</type>
        <definition>const Shared&lt; const Frame &gt; ostk::astro::trajectory::State::accessFrame</definition>
        <argsstring>() const</argsstring>
        <name>accessFrame</name>
        <briefdescription>
<para>Accessor for the reference frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference frame </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="159" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="331" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1ae5823b96deced6c95a02eb35b56c396f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VectorXd &amp;</type>
        <definition>const VectorXd &amp; ostk::astro::trajectory::State::accessCoordinates</definition>
        <argsstring>() const</argsstring>
        <name>accessCoordinates</name>
        <briefdescription>
<para>Accessor for the coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The coordinates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="164" column="20" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="341" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1af7aeabb36f72d0a2a9911176d4fe4f7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Shared&lt; const <ref refid="classostk_1_1astro_1_1trajectory_1_1state_1_1_coordinates_broker" kindref="compound">CoordinatesBroker</ref> &gt; &amp;</type>
        <definition>const Shared&lt; const CoordinatesBroker &gt; &amp; ostk::astro::trajectory::State::accessCoordinatesBroker</definition>
        <argsstring>() const</argsstring>
        <name>accessCoordinatesBroker</name>
        <briefdescription>
<para><ref refid="classostk_1_1astro_1_1_access" kindref="compound">Access</ref> the coordinates broker associated with the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The coordinates broker associated to the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="169" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="351" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a858558cb5107a76d43c33a2f7d3ffaf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>Size ostk::astro::trajectory::State::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
<para>Get the size of the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="174" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="361" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1af1ba3040b895b0963d5fb96a0756cc2b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Instant</type>
        <definition>Instant ostk::astro::trajectory::State::getInstant</definition>
        <argsstring>() const</argsstring>
        <name>getInstant</name>
        <briefdescription>
<para>Get the instant associated with the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The instant </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="179" column="13" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a73f836fe73cf4a2829a2151ddac47477" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Shared&lt; const Frame &gt;</type>
        <definition>Shared&lt; const Frame &gt; ostk::astro::trajectory::State::getFrame</definition>
        <argsstring>() const</argsstring>
        <name>getFrame</name>
        <briefdescription>
<para>Get the reference frame associated with the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference frame </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="184" column="12" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="376" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1ad5ceac322a929f0f62214a663a21f4ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Position</type>
        <definition>Position ostk::astro::trajectory::State::getPosition</definition>
        <argsstring>() const</argsstring>
        <name>getPosition</name>
        <briefdescription>
<para>Get the coordinates of the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the cartesian position associated with the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> (if present).</para>
<para><simplesect kind="return"><para>The cartesian position </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="190" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="381" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a1a992dcad42fb3094766907a9472e7e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Velocity</type>
        <definition>Velocity ostk::astro::trajectory::State::getVelocity</definition>
        <argsstring>() const</argsstring>
        <name>getVelocity</name>
        <briefdescription>
<para>Get the cartesian velocity associated with the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> (if present). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The cartesian velocity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="195" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="391" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a715f423e24053bee743631bd1ded8af2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Quaternion</type>
        <definition>Quaternion ostk::astro::trajectory::State::getAttitude</definition>
        <argsstring>() const</argsstring>
        <name>getAttitude</name>
        <briefdescription>
<para>Get the attitude quaternion associated with the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> (if present). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The attitude quaternion </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="200" column="16" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="401" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a0220561e712152e60371d7ce203d50ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astro::trajectory::State::getAngularVelocity</definition>
        <argsstring>() const</argsstring>
        <name>getAngularVelocity</name>
        <briefdescription>
<para>Get the angular velocity associated with the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> (if present). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The angular velocity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="205" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="411" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1adece3f2dda107d9178b40648dfbc01d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VectorXd</type>
        <definition>VectorXd ostk::astro::trajectory::State::getCoordinates</definition>
        <argsstring>() const</argsstring>
        <name>getCoordinates</name>
        <briefdescription>
<para>Get the coordinates of the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The coordinates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="210" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="421" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1ad03f40490dd2a2572284221008be05f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Array&lt; Shared&lt; const <ref refid="classostk_1_1astro_1_1trajectory_1_1state_1_1_coordinates_subset" kindref="compound">CoordinatesSubset</ref> &gt; &gt;</type>
        <definition>const Array&lt; Shared&lt; const CoordinatesSubset &gt; &gt; ostk::astro::trajectory::State::getCoordinatesSubsets</definition>
        <argsstring>() const</argsstring>
        <name>getCoordinatesSubsets</name>
        <briefdescription>
<para>Get the coordinates subsets of the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The coordinates subsets </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="215" column="17" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="426" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a03752b6712854c8369824408bab72e3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astro::trajectory::State::hasSubset</definition>
        <argsstring>(const Shared&lt; const CoordinatesSubset &gt; &amp;aCoordinatesSubsetSPtr) const</argsstring>
        <name>hasSubset</name>
        <param>
          <type>const Shared&lt; const <ref refid="classostk_1_1astro_1_1trajectory_1_1state_1_1_coordinates_subset" kindref="compound">CoordinatesSubset</ref> &gt; &amp;</type>
          <declname>aCoordinatesSubsetSPtr</declname>
        </param>
        <briefdescription>
<para>Check if the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> has a given coordinates subset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aCoordinatesSubsetSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>the coordinates subset to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the coordinates subset is included in the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="222" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="436" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1ae2681f516262a1f851fa91c57c3577cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VectorXd</type>
        <definition>VectorXd ostk::astro::trajectory::State::extractCoordinate</definition>
        <argsstring>(const Shared&lt; const CoordinatesSubset &gt; &amp;aSubsetSPtr) const</argsstring>
        <name>extractCoordinate</name>
        <param>
          <type>const Shared&lt; const <ref refid="classostk_1_1astro_1_1trajectory_1_1state_1_1_coordinates_subset" kindref="compound">CoordinatesSubset</ref> &gt; &amp;</type>
          <declname>aSubsetSPtr</declname>
        </param>
        <briefdescription>
<para>Extract the coordinates for a single subset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aSubsetSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The subset to extract the coordinates for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The coordinates for the subset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="228" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="446" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1aad1f1b9eeb7118bbe356520d3fe40f03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VectorXd</type>
        <definition>VectorXd ostk::astro::trajectory::State::extractCoordinates</definition>
        <argsstring>(const Array&lt; Shared&lt; const CoordinatesSubset &gt;&gt; &amp;aCoordinatesSubsetsArray) const</argsstring>
        <name>extractCoordinates</name>
        <param>
          <type>const Array&lt; Shared&lt; const <ref refid="classostk_1_1astro_1_1trajectory_1_1state_1_1_coordinates_subset" kindref="compound">CoordinatesSubset</ref> &gt;&gt; &amp;</type>
          <declname>aCoordinatesSubsetsArray</declname>
        </param>
        <briefdescription>
<para>Extract the coordinates for multiple subsets. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aCoordinatesSubsetsArray</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of subsets to extract the coordinates for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The coordinates for the subsets </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="234" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="451" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1aa9c95303df830f9dfed347231961dcf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref></type>
        <definition>State ostk::astro::trajectory::State::inFrame</definition>
        <argsstring>(const Shared&lt; const Frame &gt; &amp;aFrameSPtr) const</argsstring>
        <name>inFrame</name>
        <param>
          <type>const Shared&lt; const Frame &gt; &amp;</type>
          <declname>aFrameSPtr</declname>
        </param>
        <briefdescription>
<para>Transform the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> to a different reference frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFrameSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference frame to transform to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformed <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="240" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="456" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1a0072b543bbac1abe5e94609c74491b5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostk::astro::trajectory::State::print</definition>
        <argsstring>(std::ostream &amp;anOutputStream, bool displayDecorator=true) const</argsstring>
        <name>print</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>displayDecorator</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Print the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> to an output stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream to print to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>displayDecorator</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to display the decorator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="246" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="493" bodyend="519"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classostk_1_1astro_1_1trajectory_1_1_state_1abba03f039f2534d691a1dc28426e8b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const State &amp;aState)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Stream insertion operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream to insert into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> to insert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output stream with the <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="144" column="12" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="308" bodyend="313"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1astro_1_1trajectory_1_1_state_1ab6ed6a252eeac1d24cf3b5c65ec0c6b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref></type>
        <definition>State ostk::astro::trajectory::State::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <briefdescription>
<para>Get an undefined <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An undefined <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="251" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="521" bodyend="524"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classostk_1_1astro_1_1_trajectory" kindref="compound">Trajectory</ref> <ref refid="classostk_1_1astro_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="46" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" bodystart="45" bodyend="258"/>
    <listofallmembers>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1ae5823b96deced6c95a02eb35b56c396f" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>accessCoordinates</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1af7aeabb36f72d0a2a9911176d4fe4f7f" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>accessCoordinatesBroker</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a2490cdc545c5bb4d23bd14e8eb267f9e" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>accessFrame</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1afc21870411eef52ce1293e31eda16d3c" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>accessInstant</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a417019acc4c8d4e8f6e8fe709bd04d37" prot="private" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>coordinates_</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a5ccd00bc97489fac47f452c545917927" prot="private" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>coordinatesBrokerSPtr_</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1ae2681f516262a1f851fa91c57c3577cc" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>extractCoordinate</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1aad1f1b9eeb7118bbe356520d3fe40f03" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>extractCoordinates</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a5815a2985dd598da916c4224385fe7a2" prot="private" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>frameSPtr_</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a0220561e712152e60371d7ce203d50ca" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>getAngularVelocity</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a715f423e24053bee743631bd1ded8af2" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>getAttitude</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1adece3f2dda107d9178b40648dfbc01d0" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>getCoordinates</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1ad03f40490dd2a2572284221008be05f5" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>getCoordinatesSubsets</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a73f836fe73cf4a2829a2151ddac47477" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>getFrame</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1af1ba3040b895b0963d5fb96a0756cc2b" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>getInstant</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1ad5ceac322a929f0f62214a663a21f4ae" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>getPosition</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a858558cb5107a76d43c33a2f7d3ffaf6" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>getSize</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a1a992dcad42fb3094766907a9472e7e0" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>getVelocity</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a03752b6712854c8369824408bab72e3c" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>hasSubset</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1aa9c95303df830f9dfed347231961dcf6" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>inFrame</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1ab5a639929e70f115a012685d8845a04e" prot="private" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>instant_</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a09966efb00e3206cc2d20935c55658ad" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>isDefined</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a53ac2b13092bc7777efa14362fec4c46" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>operator!=</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a8d8ff34816c5e4895f9274fc06dbb799" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>operator+</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1abd0979467d66ca07b86d5405255d26ed" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>operator-</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1abba03f039f2534d691a1dc28426e8b89" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>operator&lt;&lt;</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1ac4281382f859c517dd6233f341cdac66" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>operator=</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1acd68798b63a7e3a89e61b4b668d8dbb0" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>operator==</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a0072b543bbac1abe5e94609c74491b5d" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>print</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1abbaa96f2d2b7f388eb073daab94202b3" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>State</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a9774b1ddfacd2707986066f5f0650368" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>State</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a01ef71cfac563cfbc8b5082ccd379227" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>State</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1a8628aceae903c9492f0fb269888434b0" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>State</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1ac8657234876a3e043bcdfa7f88470e77" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>State</name></member>
      <member refid="classostk_1_1astro_1_1trajectory_1_1_state_1ab6ed6a252eeac1d24cf3b5c65ec0c6b6" prot="public" virt="non-virtual"><scope>ostk::astro::trajectory::State</scope><name>Undefined</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
