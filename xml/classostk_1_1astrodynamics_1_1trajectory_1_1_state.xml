<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kind="class" language="C++" prot="public">
    <compoundname>ostk::astrodynamics::trajectory::State</compoundname>
    <includes refid="_state_8hpp" local="no">State.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1add2d2e5d18fbdadb99f7a220f840eab6" prot="private" static="no" mutable="no">
        <type>Instant</type>
        <definition>Instant ostk::astrodynamics::trajectory::State::instant_</definition>
        <argsstring></argsstring>
        <name>instant_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="254" column="13" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a41bb8e1a297a75754252c2ca2e0d626e" prot="private" static="no" mutable="no">
        <type>VectorXd</type>
        <definition>VectorXd ostk::astrodynamics::trajectory::State::coordinates_</definition>
        <argsstring></argsstring>
        <name>coordinates_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="255" column="14" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a43ad5de3a0f35b59ad15958f2abb4eb7" prot="private" static="no" mutable="no">
        <type>Shared&lt; const Frame &gt;</type>
        <definition>Shared&lt;const Frame&gt; ostk::astrodynamics::trajectory::State::frameSPtr_</definition>
        <argsstring></argsstring>
        <name>frameSPtr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="256" column="12" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a9cc5ce3bb10644c6622190783b7c07e0" prot="private" static="no" mutable="no">
        <type>Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1state_1_1_coordinate_broker" kindref="compound">CoordinateBroker</ref> &gt;</type>
        <definition>Shared&lt;const CoordinateBroker&gt; ostk::astrodynamics::trajectory::State::coordinatesBrokerSPtr_</definition>
        <argsstring></argsstring>
        <name>coordinatesBrokerSPtr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="257" column="12" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a3a827a0ee41ac08a84f89e21c6e4ec2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::trajectory::State::State</definition>
        <argsstring>(const Instant &amp;anInstant, const VectorXd &amp;aCoordinates, const Shared&lt; const Frame &gt; &amp;aFrameSPtr, const Shared&lt; const CoordinateBroker &gt; &amp;aCoordinateBrokerSPtr)</argsstring>
        <name>State</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const VectorXd &amp;</type>
          <declname>aCoordinates</declname>
        </param>
        <param>
          <type>const Shared&lt; const Frame &gt; &amp;</type>
          <declname>aFrameSPtr</declname>
        </param>
        <param>
          <type>const Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1state_1_1_coordinate_broker" kindref="compound">CoordinateBroker</ref> &gt; &amp;</type>
          <declname>aCoordinateBrokerSPtr</declname>
        </param>
        <briefdescription>
<para>Constructor with a pre-defined Coordinates Broker. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCoordinates</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinates at the instant in International System of Units </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aFrameSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference frame in which the coordinates are referenced to and resolved in </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCoordinateBrokerSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate broker associated to the coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="55" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="32" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a609568f74dced778b52852274b43ad9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::trajectory::State::State</definition>
        <argsstring>(const Instant &amp;anInstant, const VectorXd &amp;aCoordinates, const Shared&lt; const Frame &gt; &amp;aFrameSPtr, const Array&lt; Shared&lt; const CoordinateSubset &gt;&gt; &amp;aCoordinateSubsetsArray)</argsstring>
        <name>State</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const VectorXd &amp;</type>
          <declname>aCoordinates</declname>
        </param>
        <param>
          <type>const Shared&lt; const Frame &gt; &amp;</type>
          <declname>aFrameSPtr</declname>
        </param>
        <param>
          <type>const Array&lt; Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1state_1_1_coordinate_subset" kindref="compound">CoordinateSubset</ref> &gt;&gt; &amp;</type>
          <declname>aCoordinateSubsetsArray</declname>
        </param>
        <briefdescription>
<para>Constructor. This constructor makes a new Coordinates Broker under the hood for every <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref>. When possible, users should prefer passing in an existing Coordinates Broker or using a <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_builder" kindref="compound">StateBuilder</ref> to reduce memory footprint when constructing many states. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCoordinates</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinates at the instant in International System of Units </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aFrameSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference frame in which the coordinates are referenced to and resolved in </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCoordinateSubsetsArray</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate subsets associated to the coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="71" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="49" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1aee30b7199910c0d171c8a9c88af4cf88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::trajectory::State::State</definition>
        <argsstring>(const Instant &amp;anInstant, const Position &amp;aPosition, const Velocity &amp;aVelocity, const Quaternion &amp;anAttitude, const Vector3d &amp;anAngularVelocity, const Shared&lt; const Frame &gt; &amp;anAttitudeReferenceFrame)</argsstring>
        <name>State</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const Position &amp;</type>
          <declname>aPosition</declname>
        </param>
        <param>
          <type>const Velocity &amp;</type>
          <declname>aVelocity</declname>
        </param>
        <param>
          <type>const Quaternion &amp;</type>
          <declname>anAttitude</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>anAngularVelocity</declname>
        </param>
        <param>
          <type>const Shared&lt; const Frame &gt; &amp;</type>
          <declname>anAttitudeReferenceFrame</declname>
        </param>
        <briefdescription>
<para>Utility constructor for Position/Velocity/Attitude/Angular Velocity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>The Cartesian position at the instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The Cartesian velocity at the instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAttitude</parametername>
</parameternamelist>
<parameterdescription>
<para>The attitude at the instant, representing the rotation required to go from the attitude reference frame to the satellite body frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAngularVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The angular velocity at the instant, representing the angular velocity of the satellite body frame with respect to the attitude frame, expressed, in satellite body frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAttitudeReferenceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The attitude reference frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="88" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="99" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a2d0ea1f2207371a245335454054cc351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::trajectory::State::State</definition>
        <argsstring>(const Instant &amp;anInstant, const Position &amp;aPosition, const Velocity &amp;aVelocity)</argsstring>
        <name>State</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const Position &amp;</type>
          <declname>aPosition</declname>
        </param>
        <param>
          <type>const Velocity &amp;</type>
          <declname>aVelocity</declname>
        </param>
        <briefdescription>
<para>Utility constructor for Position/Velocity only. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>The cartesian position at the instant in International System of Units </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The cartesian velocity at the instant in International System of Units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="102" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="62" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a1778eee87ae0c2a9af5c0c10c1481c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::trajectory::State::State</definition>
        <argsstring>(const State &amp;aState)</argsstring>
        <name>State</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>An existing <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="107" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="157" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1abda2bed81448e9882682a2671b2ba744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
        <definition>State &amp; ostk::astrodynamics::trajectory::State::operator=</definition>
        <argsstring>(const State &amp;aState)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Copy-assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The modified <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="113" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="165" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a512c16b9e305f0c7adf6efb86a831ae9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::trajectory::State::operator==</definition>
        <argsstring>(const State &amp;aState) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> to compare to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the States are equal, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="119" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="177" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a9be7bb80baba6940991f647eeec758ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::trajectory::State::operator!=</definition>
        <argsstring>(const State &amp;aState) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Inequality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> to compare to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the States are not equal, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="125" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a5894ce1b146dbf082bbcae125e6de78b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref></type>
        <definition>State ostk::astrodynamics::trajectory::State::operator+</definition>
        <argsstring>(const State &amp;aState) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Addition operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> to add to this <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sum of the two States </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="131" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="220" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a7715e80a44b3d2c572581f6fe42ac086" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref></type>
        <definition>State ostk::astrodynamics::trajectory::State::operator-</definition>
        <argsstring>(const State &amp;aState) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Subtraction operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> to subtract from this <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The difference between the two States </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="137" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="265" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a23e6775a13f98932d00532f1a68b54f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::trajectory::State::isDefined</definition>
        <argsstring>() const</argsstring>
        <name>isDefined</name>
        <briefdescription>
<para>Check if the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> is defined. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> is defined, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="149" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="317" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a4ca2c1ab82d9ccfa8ab10323622df410" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Instant &amp;</type>
        <definition>const Instant &amp; ostk::astrodynamics::trajectory::State::accessInstant</definition>
        <argsstring>() const</argsstring>
        <name>accessInstant</name>
        <briefdescription>
<para>Accessor for the instant. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The instant </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="154" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="323" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a34b40f1ec8262e3f8170b1b3e35e6e8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Shared&lt; const Frame &gt;</type>
        <definition>const Shared&lt; const Frame &gt; ostk::astrodynamics::trajectory::State::accessFrame</definition>
        <argsstring>() const</argsstring>
        <name>accessFrame</name>
        <briefdescription>
<para>Accessor for the reference frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference frame </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="159" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="333" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1aa788598e2a3c7104cc59bd8c9fde7bf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const VectorXd &amp;</type>
        <definition>const VectorXd &amp; ostk::astrodynamics::trajectory::State::accessCoordinates</definition>
        <argsstring>() const</argsstring>
        <name>accessCoordinates</name>
        <briefdescription>
<para>Accessor for the coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The coordinates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="164" column="20" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="343" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a38013685a44ee44365c450f19d939948" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1state_1_1_coordinate_broker" kindref="compound">CoordinateBroker</ref> &gt; &amp;</type>
        <definition>const Shared&lt; const CoordinateBroker &gt; &amp; ostk::astrodynamics::trajectory::State::accessCoordinateBroker</definition>
        <argsstring>() const</argsstring>
        <name>accessCoordinateBroker</name>
        <briefdescription>
<para><ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref> the coordinate broker associated with the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The coordinate broker associated to the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="169" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="353" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1abc16c7395c9ce95588eee41ec67441b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>Size ostk::astrodynamics::trajectory::State::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
<para>Get the size of the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="174" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="363" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a442c82d7ffbbdd4115f23ad196bd0733" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Instant</type>
        <definition>Instant ostk::astrodynamics::trajectory::State::getInstant</definition>
        <argsstring>() const</argsstring>
        <name>getInstant</name>
        <briefdescription>
<para>Get the instant associated with the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The instant </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="179" column="13" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="373" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1ae6fa2710f8810949613648679918520f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Shared&lt; const Frame &gt;</type>
        <definition>Shared&lt; const Frame &gt; ostk::astrodynamics::trajectory::State::getFrame</definition>
        <argsstring>() const</argsstring>
        <name>getFrame</name>
        <briefdescription>
<para>Get the reference frame associated with the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference frame </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="184" column="12" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="378" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a80cda7e7f115a650fcd9c8bbb199e327" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Position</type>
        <definition>Position ostk::astrodynamics::trajectory::State::getPosition</definition>
        <argsstring>() const</argsstring>
        <name>getPosition</name>
        <briefdescription>
<para>Get the coordinates of the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the cartesian position associated with the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> (if present).</para>
<para><simplesect kind="return"><para>The cartesian position </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="190" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="383" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1afb8a984db3d74a4b134681ca299a8f45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Velocity</type>
        <definition>Velocity ostk::astrodynamics::trajectory::State::getVelocity</definition>
        <argsstring>() const</argsstring>
        <name>getVelocity</name>
        <briefdescription>
<para>Get the cartesian velocity associated with the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> (if present). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The cartesian velocity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="195" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="393" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a81ae7875b0ba97b4f4a7a946abe7a022" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Quaternion</type>
        <definition>Quaternion ostk::astrodynamics::trajectory::State::getAttitude</definition>
        <argsstring>() const</argsstring>
        <name>getAttitude</name>
        <briefdescription>
<para>Get the attitude quaternion associated with the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> (if present). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The attitude quaternion </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="200" column="16" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="403" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a7d1623cdfe904d686997eb959eca50ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::trajectory::State::getAngularVelocity</definition>
        <argsstring>() const</argsstring>
        <name>getAngularVelocity</name>
        <briefdescription>
<para>Get the angular velocity associated with the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> (if present). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The angular velocity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="205" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="420" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a0f5c1c187ca8a6c4a44f95ae7898bdee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VectorXd</type>
        <definition>VectorXd ostk::astrodynamics::trajectory::State::getCoordinates</definition>
        <argsstring>() const</argsstring>
        <name>getCoordinates</name>
        <briefdescription>
<para>Get the coordinates of the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The coordinates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="210" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="430" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a052e4b468e98993b1b1ff63be081d806" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Array&lt; Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1state_1_1_coordinate_subset" kindref="compound">CoordinateSubset</ref> &gt; &gt;</type>
        <definition>const Array&lt; Shared&lt; const CoordinateSubset &gt; &gt; ostk::astrodynamics::trajectory::State::getCoordinateSubsets</definition>
        <argsstring>() const</argsstring>
        <name>getCoordinateSubsets</name>
        <briefdescription>
<para>Get the coordinate subsets of the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The coordinate subsets </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="215" column="17" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="435" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a845931b2e89048d0e6a36e96a33cb087" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::trajectory::State::hasSubset</definition>
        <argsstring>(const Shared&lt; const CoordinateSubset &gt; &amp;aCoordinateSubsetSPtr) const</argsstring>
        <name>hasSubset</name>
        <param>
          <type>const Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1state_1_1_coordinate_subset" kindref="compound">CoordinateSubset</ref> &gt; &amp;</type>
          <declname>aCoordinateSubsetSPtr</declname>
        </param>
        <briefdescription>
<para>Check if the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> has a given coordinate subset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aCoordinateSubsetSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>the coordinate subset to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the coordinate subset is included in the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="222" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="445" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a234199cd6a37a3f123ac7aff6b76e0c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VectorXd</type>
        <definition>VectorXd ostk::astrodynamics::trajectory::State::extractCoordinate</definition>
        <argsstring>(const Shared&lt; const CoordinateSubset &gt; &amp;aSubsetSPtr) const</argsstring>
        <name>extractCoordinate</name>
        <param>
          <type>const Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1state_1_1_coordinate_subset" kindref="compound">CoordinateSubset</ref> &gt; &amp;</type>
          <declname>aSubsetSPtr</declname>
        </param>
        <briefdescription>
<para>Extract the coordinates for a single subset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aSubsetSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The subset to extract the coordinates for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The coordinates for the subset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="228" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="455" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1abf4d23822eb00ff90a98010a12401ffe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VectorXd</type>
        <definition>VectorXd ostk::astrodynamics::trajectory::State::extractCoordinates</definition>
        <argsstring>(const Array&lt; Shared&lt; const CoordinateSubset &gt;&gt; &amp;aCoordinateSubsetsArray) const</argsstring>
        <name>extractCoordinates</name>
        <param>
          <type>const Array&lt; Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1state_1_1_coordinate_subset" kindref="compound">CoordinateSubset</ref> &gt;&gt; &amp;</type>
          <declname>aCoordinateSubsetsArray</declname>
        </param>
        <briefdescription>
<para>Extract the coordinates for multiple subsets. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aCoordinateSubsetsArray</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of subsets to extract the coordinates for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The coordinates for the subsets </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="234" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="460" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1ac58155d05c06217d934447383e4235e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref></type>
        <definition>State ostk::astrodynamics::trajectory::State::inFrame</definition>
        <argsstring>(const Shared&lt; const Frame &gt; &amp;aFrameSPtr) const</argsstring>
        <name>inFrame</name>
        <param>
          <type>const Shared&lt; const Frame &gt; &amp;</type>
          <declname>aFrameSPtr</declname>
        </param>
        <briefdescription>
<para>Transform the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> to a different reference frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFrameSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference frame to transform to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformed <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="240" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="465" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1ab2398bc2e608b4c48cbe354a35589c78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostk::astrodynamics::trajectory::State::print</definition>
        <argsstring>(std::ostream &amp;anOutputStream, bool displayDecorator=true) const</argsstring>
        <name>print</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>displayDecorator</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Print the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> to an output stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream to print to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>displayDecorator</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to display the decorator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="246" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="502" bodyend="528"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1abba03f039f2534d691a1dc28426e8b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const State &amp;aState)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
<para>Stream insertion operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream to insert into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aState</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> to insert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output stream with the <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="144" column="12" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="310" bodyend="315"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a24ed7a7e725ad450707d572dff86b1ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref></type>
        <definition>State ostk::astrodynamics::trajectory::State::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <briefdescription>
<para>Get an undefined <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An undefined <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="251" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/State.cpp" bodystart="530" bodyend="533"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">Trajectory</ref> <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" line="46" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/State.hpp" bodystart="45" bodyend="258"/>
    <listofallmembers>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a38013685a44ee44365c450f19d939948" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>accessCoordinateBroker</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1aa788598e2a3c7104cc59bd8c9fde7bf3" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>accessCoordinates</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a34b40f1ec8262e3f8170b1b3e35e6e8a" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>accessFrame</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a4ca2c1ab82d9ccfa8ab10323622df410" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>accessInstant</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a41bb8e1a297a75754252c2ca2e0d626e" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>coordinates_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a9cc5ce3bb10644c6622190783b7c07e0" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>coordinatesBrokerSPtr_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a234199cd6a37a3f123ac7aff6b76e0c8" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>extractCoordinate</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1abf4d23822eb00ff90a98010a12401ffe" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>extractCoordinates</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a43ad5de3a0f35b59ad15958f2abb4eb7" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>frameSPtr_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a7d1623cdfe904d686997eb959eca50ee" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>getAngularVelocity</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a81ae7875b0ba97b4f4a7a946abe7a022" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>getAttitude</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a0f5c1c187ca8a6c4a44f95ae7898bdee" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>getCoordinates</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a052e4b468e98993b1b1ff63be081d806" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>getCoordinateSubsets</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1ae6fa2710f8810949613648679918520f" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>getFrame</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a442c82d7ffbbdd4115f23ad196bd0733" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>getInstant</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a80cda7e7f115a650fcd9c8bbb199e327" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>getPosition</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1abc16c7395c9ce95588eee41ec67441b1" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>getSize</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1afb8a984db3d74a4b134681ca299a8f45" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>getVelocity</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a845931b2e89048d0e6a36e96a33cb087" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>hasSubset</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1ac58155d05c06217d934447383e4235e8" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>inFrame</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1add2d2e5d18fbdadb99f7a220f840eab6" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>instant_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a23e6775a13f98932d00532f1a68b54f0" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>isDefined</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a9be7bb80baba6940991f647eeec758ad" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>operator!=</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a5894ce1b146dbf082bbcae125e6de78b" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>operator+</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a7715e80a44b3d2c572581f6fe42ac086" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>operator-</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1abba03f039f2534d691a1dc28426e8b89" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>operator&lt;&lt;</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1abda2bed81448e9882682a2671b2ba744" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>operator=</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a512c16b9e305f0c7adf6efb86a831ae9" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>operator==</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1ab2398bc2e608b4c48cbe354a35589c78" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>print</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a3a827a0ee41ac08a84f89e21c6e4ec2b" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>State</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a609568f74dced778b52852274b43ad9e" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>State</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1aee30b7199910c0d171c8a9c88af4cf88" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>State</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a2d0ea1f2207371a245335454054cc351" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>State</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a1778eee87ae0c2a9af5c0c10c1481c4c" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>State</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state_1a24ed7a7e725ad450707d572dff86b1ee" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::State</scope><name>Undefined</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
