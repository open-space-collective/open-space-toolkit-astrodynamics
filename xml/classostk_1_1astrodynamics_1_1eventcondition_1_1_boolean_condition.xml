<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition" kind="class" language="C++" prot="public">
    <compoundname>ostk::astrodynamics::eventcondition::BooleanCondition</compoundname>
    <basecompoundref refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition" prot="public" virt="non-virtual">ostk::astrodynamics::eventcondition::RealCondition</basecompoundref>
    <includes refid="_boolean_condition_8hpp" local="no">BooleanCondition.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition_1a875cc21a156cbb783adfc96ab82c2f9d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::eventcondition::BooleanCondition::inverse_</definition>
        <argsstring></argsstring>
        <name>inverse_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.hpp" line="63" column="10" bodyfile="include/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition_1a3cf86ef0f6ee618099a25fed551580dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::eventcondition::BooleanCondition::BooleanCondition</definition>
        <argsstring>(const String &amp;aName, const Criterion &amp;aCriterion, const std::function&lt; bool(const State &amp;)&gt; &amp;anEvaluator, const bool &amp;anInverseFlag=false)</argsstring>
        <name>BooleanCondition</name>
        <param>
          <type>const String &amp;</type>
          <declname>aName</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition_1a953aee66ab37b79c90eee2238334ba8a" kindref="member">Criterion</ref> &amp;</type>
          <declname>aCriterion</declname>
        </param>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;)&gt; &amp;</type>
          <declname>anEvaluator</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>anInverseFlag</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition_1a3cf86ef0f6ee618099a25fed551580dc" kindref="member">BooleanCondition</ref><sp/>booleanCondition<sp/>=<sp/>{aName,<sp/>aCriterion,<sp/>anEvaluator,</highlight></codeline>
<codeline><highlight class="normal">anInverseFlag};</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aName</parametername>
</parameternamelist>
<parameterdescription>
<para>A string representing the name of the Boolean Event Condition </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCriterion</parametername>
</parameternamelist>
<parameterdescription>
<para>An enum indicating the criterion used to determine if the Boolean Event Condition is met </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anEvaluator</parametername>
</parameternamelist>
<parameterdescription>
<para>A function evaluating a state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anInverseFlag</parametername>
</parameternamelist>
<parameterdescription>
<para>A flag indicating whether the condition is inverted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.hpp" line="39" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.cpp" bodystart="15" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition_1a963976ee34ef068ba567b0b92ced7f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ostk::astrodynamics::eventcondition::BooleanCondition::~BooleanCondition</definition>
        <argsstring>()</argsstring>
        <name>~BooleanCondition</name>
        <briefdescription>
<para>Virtual destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.hpp" line="47" column="13" bodyfile="src/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.cpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition_1ad4ce6e9d92b564e79498db428fd7ada6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::eventcondition::BooleanCondition::isInversed</definition>
        <argsstring>() const</argsstring>
        <name>isInversed</name>
        <briefdescription>
<para>Check if the condition is inversed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Boolean value indicating whether the condition is inversed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.hpp" line="52" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition_1a02407b9f943a94e829d1e04c52952096" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ostk::astrodynamics::eventcondition::BooleanCondition::print</definition>
        <argsstring>(std::ostream &amp;anOutputStream, bool displayDecorator=true) const</argsstring>
        <name>print</name>
        <reimplements refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition_1a5ea2273c656d21f005c616417f50e720">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>displayDecorator</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Print the Boolean Event Condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream where the Boolean Event Condition will be printed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>displayDecorator</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether or not to display decorator during printing </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.hpp" line="60" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.cpp" bodystart="42" bodyend="50"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An Event Condition that can evaluate each state to a boolean. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ostk::astrodynamics::eventcondition::RealCondition</label>
        <link refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ostk::astrodynamics::eventcondition::BooleanCondition</label>
        <link refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ostk::astrodynamics::EventCondition</label>
        <link refid="classostk_1_1astrodynamics_1_1_event_condition"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>ostk::astrodynamics::EventCondition::Target</label>
        <link refid="structostk_1_1astrodynamics_1_1_event_condition_1_1_target"/>
        <childnode refid="6" relation="usage">
          <edgelabel>valueOffset</edgelabel>
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>String</label>
      </node>
      <node id="6">
        <label>Real</label>
      </node>
      <node id="2">
        <label>ostk::astrodynamics::eventcondition::RealCondition</label>
        <link refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ostk::astrodynamics::eventcondition::BooleanCondition</label>
        <link refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ostk::astrodynamics::EventCondition</label>
        <link refid="classostk_1_1astrodynamics_1_1_event_condition"/>
        <childnode refid="4" relation="usage">
          <edgelabel>name_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>target_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.hpp" line="25" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/EventCondition/BooleanCondition.hpp" bodystart="24" bodyend="64"/>
    <listofallmembers>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition_1a3cf86ef0f6ee618099a25fed551580dc" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>BooleanCondition</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition_1a953aee66ab37b79c90eee2238334ba8a" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>Criterion</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition_1a38e31f897edca3284d517677c3f773ff" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>DurationCondition</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition_1a24ee6af9652bf6ada36705cb390e3607" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>evaluate</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_event_condition_1a22fb110e41e196c20dee2d3100ea9e2d" prot="protected" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>evaluator_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_event_condition_1aa9db3935e2fee560f9852e6189d6edc3" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>EventCondition</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_event_condition_1a055740b32c8dded3fed30df4007b5464" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>EventCondition</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition_1a581866780d7022e5e160264d4ff8d54f" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>getCriterion</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_event_condition_1a1b745a1fb8324f122f298dfd92568f6b" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>getEvaluator</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_event_condition_1a87dde43e3ace08e700b68a7c7b1cab81" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>getName</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_event_condition_1ab99ea53a7ef849753078be800d798874" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>getTarget</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition_1a875cc21a156cbb783adfc96ab82c2f9d" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>inverse_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition_1ad4ce6e9d92b564e79498db428fd7ada6" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>isInversed</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition_1a64c1b504ab76b56255be7a82ea164a67" prot="public" virt="virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>isSatisfied</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_event_condition_1af55b4fe880915e5fa993476d205ad3ad" prot="protected" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>name_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition_1a02407b9f943a94e829d1e04c52952096" prot="public" virt="virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>print</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition_1aafa13fc81423a9fc20451d31ce5e9441" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>RealCondition</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition_1af295d102986ca8c004eda3944340ba11" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>RealCondition</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition_1aa8150c10e958de38abfa88830c59d054" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>StringFromCriterion</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_event_condition_1a4a084bbc8324927fc3ebd14984c4c4a0" prot="protected" virt="non-virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>target_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_event_condition_1aa35b925dc33acbf74a614203c87d8264" prot="public" virt="virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>updateTarget</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_boolean_condition_1a963976ee34ef068ba567b0b92ced7f25" prot="public" virt="virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>~BooleanCondition</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_event_condition_1aa60a1788d6c2a3acfd9dcd9fdd949076" prot="public" virt="virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>~EventCondition</name></member>
      <member refid="classostk_1_1astrodynamics_1_1eventcondition_1_1_real_condition_1ad8705e78f017b44236f404a6c8f5f12d" prot="public" virt="virtual"><scope>ostk::astrodynamics::eventcondition::BooleanCondition</scope><name>~RealCondition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
