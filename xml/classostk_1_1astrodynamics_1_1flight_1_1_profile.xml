<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1astrodynamics_1_1flight_1_1_profile" kind="class" language="C++" prot="public">
    <compoundname>ostk::astrodynamics::flight::Profile</compoundname>
    <includes refid="_profile_8hpp" local="no">Profile.hpp</includes>
    <innerclass refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1_1_custom_target" prot="public">ostk::astrodynamics::flight::Profile::CustomTarget</innerclass>
    <innerclass refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1_1_orientation_profile_target" prot="public">ostk::astrodynamics::flight::Profile::OrientationProfileTarget</innerclass>
    <innerclass refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1_1_target" prot="public">ostk::astrodynamics::flight::Profile::Target</innerclass>
    <innerclass refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1_1_trajectory_target" prot="public">ostk::astrodynamics::flight::Profile::TrajectoryTarget</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a71550cc961f583e02b8e6915423c58d9" prot="public" static="no" strong="yes">
        <type></type>
        <name>PointingMode</name>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a71550cc961f583e02b8e6915423c58d9aec0fc0100c4fc1ce4eea230c3dc10360" prot="public">
          <name>Undefined</name>
          <briefdescription>
<para>Undefined pointing mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a71550cc961f583e02b8e6915423c58d9a4d5cc7bc19ef3d1ab992ba044dc0ebe4" prot="public">
          <name>Inertial</name>
          <briefdescription>
<para>Inertial pointing mode (the spacecraft points to a celestial object) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a71550cc961f583e02b8e6915423c58d9ae749bd0537284ea6e823e91c9edcb528" prot="public">
          <name>Nadir</name>
          <briefdescription>
<para>Nadir pointing mode (the spacecraft points points &quot;directly down&quot;) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a71550cc961f583e02b8e6915423c58d9ac41a31890959544c6523af684561abe5" prot="public">
          <name>Target</name>
          <briefdescription>
<para><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1_1_target" kindref="compound">Target</ref> pointing mode (the spacecraft points to a given target position) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a71550cc961f583e02b8e6915423c58d9a90589c47f06eb971d548591f23c285af" prot="public">
          <name>Custom</name>
          <briefdescription>
<para>Custom pointing mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="75" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="enum" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a5095a2732f0495f64fd8610008f84080" prot="public" static="no" strong="yes">
        <type></type>
        <name>Axis</name>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a5095a2732f0495f64fd8610008f84080a02129bb861061d1a052c592e2dc6b383" prot="public">
          <name>X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a5095a2732f0495f64fd8610008f84080a57cec4137b614c87cb4e24a3d003a3e0" prot="public">
          <name>Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a5095a2732f0495f64fd8610008f84080a21c2e59531c8710156d34a3c30ac81d5" prot="public">
          <name>Z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="85" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="enum" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440" prot="public" static="no" strong="yes">
        <type></type>
        <name>TargetType</name>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440ab33a455491d5af35eb5eaeb0c1c43cde" prot="public">
          <name>GeocentricNadir</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440a4e2caa3cd4fbc1ba7c3ed9b2ff3ac2f2" prot="public">
          <name>GeodeticNadir</name>
          <briefdescription>
<para>Negative of the position vector of the satellite in the ECI frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440a2c1f43c429c5e00feaef7ba3327375dc" prot="public">
          <name>Trajectory</name>
          <briefdescription>
<para>Negative of the geodetic normal of the satellite in the ECI frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440a1908975f42593523412f3540d8278332" prot="public">
          <name>TargetPosition</name>
          <briefdescription>
<para>DEPRECATED: Use TargetPosition instead. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440a1f8d70b82d9fd8e4f82ef1b2cfcf5cff" prot="public">
          <name>TargetVelocity</name>
          <briefdescription>
<para>Points towards the provided target position. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440ac6f46cd87562fbaff2d0b6df92e75f0c" prot="public">
          <name>TargetSlidingGroundVelocity</name>
          <briefdescription>
<para>Points along the provided target&apos;s velocity vector. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440aef6572e4cd58bb39a3f4e82fc64fe9f0" prot="public">
          <name>Sun</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Points along the provided target&apos;s ground velocity vector (aka the scan direction of the point sliding across the ground) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440ad502a50ed945d5fca74e0105575b5b34" prot="public">
          <name>Moon</name>
          <briefdescription>
<para>The position of the Sun. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440a91cce8c5dfb9fb6916acd5779b4d020c" prot="public">
          <name>VelocityECI</name>
          <briefdescription>
<para>The position of the Moon. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440a59bd763f05b94cb8c8244592c851272e" prot="public">
          <name>VelocityECEF</name>
          <briefdescription>
<para>The velocity vector in the ECI frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440ae866d42f2134a0c63162edbb3e3a3a42" prot="public">
          <name>OrbitalMomentum</name>
          <briefdescription>
<para>The velocity vector in the ECEF frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440a2ae357b7672767300aa30afd757e1eae" prot="public">
          <name>OrientationProfile</name>
          <briefdescription>
<para>The orbital momentum vector of the satellite in the ECI frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440a90589c47f06eb971d548591f23c285af" prot="public">
          <name>Custom</name>
          <briefdescription>
<para>Points towards a profile of orientations in the ECI frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="92" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" bodystart="91" bodyend="107"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a6ab57101b752c8b7ede7cb3e3155b7ca" prot="private" static="no" mutable="no">
        <type>Unique&lt; <ref refid="classostk_1_1astrodynamics_1_1flight_1_1profile_1_1_model" kindref="compound">Model</ref> &gt;</type>
        <definition>Unique&lt;Model&gt; ostk::astrodynamics::flight::Profile::modelUPtr_</definition>
        <argsstring></argsstring>
        <name>modelUPtr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="394" column="12" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" bodystart="394" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1abb353cfa1b58766abf0c56f91db5053c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::flight::Profile::Profile</definition>
        <argsstring>(const Model &amp;aModel)</argsstring>
        <name>Profile</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1flight_1_1profile_1_1_model" kindref="compound">Model</ref> &amp;</type>
          <declname>aModel</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aModel</parametername>
</parameternamelist>
<parameterdescription>
<para>A model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="229" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a0ca170ebf0f7ba933589a0070fafaa63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::flight::Profile::Profile</definition>
        <argsstring>(const Profile &amp;aProfile)</argsstring>
        <name>Profile</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile" kindref="compound">Profile</ref> &amp;</type>
          <declname>aProfile</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aProfile</parametername>
</parameternamelist>
<parameterdescription>
<para>A flight profile </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="234" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a93fad36aacb9e5ce30c8f017937fbd5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile" kindref="compound">Profile</ref> &amp;</type>
        <definition>Profile &amp; ostk::astrodynamics::flight::Profile::operator=</definition>
        <argsstring>(const Profile &amp;aProfile)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile" kindref="compound">Profile</ref> &amp;</type>
          <declname>aProfile</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aProfile</parametername>
</parameternamelist>
<parameterdescription>
<para>A flight profile </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to flight profile </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="240" column="13" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="167" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1ad3ff13d3d8e1141542ba946756f44532" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::flight::Profile::isDefined</definition>
        <argsstring>() const</argsstring>
        <name>isDefined</name>
        <briefdescription>
<para>Check if profile is defined. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1abb353cfa1b58766abf0c56f91db5053c" kindref="member">Profile</ref>(...).isDefined();</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>True if profile is defined </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="260" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a42a00067a392312b34a33b2614ed1032" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classostk_1_1astrodynamics_1_1flight_1_1profile_1_1_model" kindref="compound">Model</ref> &amp;</type>
        <definition>const Model &amp; ostk::astrodynamics::flight::Profile::accessModel</definition>
        <argsstring>() const</argsstring>
        <name>accessModel</name>
        <briefdescription>
<para><ref refid="classostk_1_1astrodynamics_1_1_access" kindref="compound">Access</ref> profile model. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1abb353cfa1b58766abf0c56f91db5053c" kindref="member">Profile</ref><sp/>profile<sp/>=<sp/>{<sp/>...<sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Model&amp;<sp/>model<sp/>=<sp/>profile.accessModel();</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Const reference to the profile model </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="270" column="17" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="189" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a3d63ca2ade006c23ec450a4f4030fc61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref></type>
        <definition>State ostk::astrodynamics::flight::Profile::getStateAt</definition>
        <argsstring>(const Instant &amp;anInstant) const</argsstring>
        <name>getStateAt</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <briefdescription>
<para>Get state at a given instant. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1abb353cfa1b58766abf0c56f91db5053c" kindref="member">Profile</ref><sp/>profile<sp/>=<sp/>{<sp/>...<sp/>};</highlight></codeline>
<codeline><highlight class="normal">Instant<sp/>instant<sp/>=<sp/>{<sp/>...<sp/>};</highlight></codeline>
<codeline><highlight class="normal">State<sp/>state<sp/>=<sp/>profile.getStateAt(instant);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>State </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="282" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="199" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a024e820df226aa5873725e60f865ca76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Array&lt; <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &gt;</type>
        <definition>Array&lt; State &gt; ostk::astrodynamics::flight::Profile::getStatesAt</definition>
        <argsstring>(const Array&lt; Instant &gt; &amp;anInstantArray) const</argsstring>
        <name>getStatesAt</name>
        <param>
          <type>const Array&lt; Instant &gt; &amp;</type>
          <declname>anInstantArray</declname>
        </param>
        <briefdescription>
<para>Get states at a given instants. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1abb353cfa1b58766abf0c56f91db5053c" kindref="member">Profile</ref><sp/>profile<sp/>=<sp/>{<sp/>...<sp/>};</highlight></codeline>
<codeline><highlight class="normal">Array&lt;Instant&gt;<sp/>instants<sp/>=<sp/>{<sp/>...<sp/>};</highlight></codeline>
<codeline><highlight class="normal">Array&lt;State&gt;<sp/>state<sp/>=<sp/>profile.getStatesAt(instants);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstantArray</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of instants </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Array of states </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="294" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="209" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1aeb8721e2f031d5569ea192510f807b16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Axes</type>
        <definition>Axes ostk::astrodynamics::flight::Profile::getAxesAt</definition>
        <argsstring>(const Instant &amp;anInstant) const</argsstring>
        <name>getAxesAt</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <briefdescription>
<para>Get axes at a given instant. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1abb353cfa1b58766abf0c56f91db5053c" kindref="member">Profile</ref><sp/>profile<sp/>=<sp/>{<sp/>...<sp/>};</highlight></codeline>
<codeline><highlight class="normal">Instant<sp/>instant<sp/>=<sp/>{<sp/>...<sp/>};</highlight></codeline>
<codeline><highlight class="normal">Axes<sp/>axes<sp/>=<sp/>profile.getAxesAt(instant);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Axes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="306" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="219" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1affb473c8ce59ff6f14520c8579ea7278" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Shared&lt; const Frame &gt;</type>
        <definition>Shared&lt; const Frame &gt; ostk::astrodynamics::flight::Profile::getBodyFrame</definition>
        <argsstring>(const String &amp;aFrameName) const</argsstring>
        <name>getBodyFrame</name>
        <param>
          <type>const String &amp;</type>
          <declname>aFrameName</declname>
        </param>
        <briefdescription>
<para>Get body frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFrameName</parametername>
</parameternamelist>
<parameterdescription>
<para>A body frame name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Shared pointer to body frame </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="313" column="12" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="229" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a053646c0be60f757ac04a53e5b3bdfb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Shared&lt; const Frame &gt;</type>
        <definition>Shared&lt; const Frame &gt; ostk::astrodynamics::flight::Profile::constructBodyFrame</definition>
        <argsstring>(const String &amp;aFrameName, const bool &amp;overwrite=false) const</argsstring>
        <name>constructBodyFrame</name>
        <param>
          <type>const String &amp;</type>
          <declname>aFrameName</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>overwrite</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Construct body frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFrameName</parametername>
</parameternamelist>
<parameterdescription>
<para>A body frame name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>overwrite</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, destruct existing frame with same name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Shared pointer to body frame </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="320" column="12" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="244" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1afc2e113ef038e3dd84d9e65da38161da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ostk::astrodynamics::flight::Profile::print</definition>
        <argsstring>(std::ostream &amp;anOutputStream, bool displayDecorator=true) const</argsstring>
        <name>print</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>displayDecorator</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Print flight profile to output stream. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1abb353cfa1b58766abf0c56f91db5053c" kindref="member">Profile</ref><sp/>profile<sp/>=<sp/>{<sp/>...<sp/>};</highlight></codeline>
<codeline><highlight class="normal">profile.print(std::cout,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>displayDecorator</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, display decorator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="331" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="266" bodyend="280"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a8747e69fc10f1b068a0dd02d79da3b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const Profile &amp;aProfile)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile" kindref="compound">Profile</ref> &amp;</type>
          <declname>aProfile</declname>
        </param>
        <briefdescription>
<para>Output stream operator. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1abb353cfa1b58766abf0c56f91db5053c" kindref="member">Profile</ref>(...);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aProfile</parametername>
</parameternamelist>
<parameterdescription>
<para>A flight profile </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="251" column="12" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="177" bodyend="182"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1ab6edc8d4ac9424bb95716d217f258dc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile" kindref="compound">Profile</ref></type>
        <definition>Profile ostk::astrodynamics::flight::Profile::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <briefdescription>
<para>Constructs an undefined flight profile. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1abb353cfa1b58766abf0c56f91db5053c" kindref="member">Profile</ref><sp/>profile<sp/>=<sp/><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1ab6edc8d4ac9424bb95716d217f258dc3" kindref="member">Profile::Undefined</ref>();<sp/></highlight><highlight class="comment">//<sp/>Undefined</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Undefined profile </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="340" column="20" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a2b7d11ec1014fe36e1c23daa2062b9e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile" kindref="compound">Profile</ref></type>
        <definition>Profile ostk::astrodynamics::flight::Profile::InertialPointing</definition>
        <argsstring>(const ostk::astrodynamics::Trajectory &amp;aTrajectory, const Quaternion &amp;aQuaternion)</argsstring>
        <name>InertialPointing</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">ostk::astrodynamics::Trajectory</ref> &amp;</type>
          <declname>aTrajectory</declname>
        </param>
        <param>
          <type>const Quaternion &amp;</type>
          <declname>aQuaternion</declname>
        </param>
        <briefdescription>
<para>Constructs a flight profile with inertial pointing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aTrajectory</parametername>
</parameternamelist>
<parameterdescription>
<para>A trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aQuaternion</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointing in GCRF </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flight profile </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="347" column="20" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a437edce447cf62a16220abc89dc4d41a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile" kindref="compound">Profile</ref></type>
        <definition>Profile ostk::astrodynamics::flight::Profile::LocalOrbitalFramePointing</definition>
        <argsstring>(const trajectory::Orbit &amp;anOrbit, const trajectory::Orbit::FrameType &amp;anOrbitalFrameType)</argsstring>
        <name>LocalOrbitalFramePointing</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">trajectory::Orbit</ref> &amp;</type>
          <declname>anOrbit</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23" kindref="member">trajectory::Orbit::FrameType</ref> &amp;</type>
          <declname>anOrbitalFrameType</declname>
        </param>
        <briefdescription>
<para>Constructs a flight profile with local orbital frame pointing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOrbit</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anOrbitalFrameType</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbital frame type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flight profile </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="354" column="20" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="292" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1ad6e3b2007d0fa30b297c2dc092b0f659" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile" kindref="compound">Profile</ref></type>
        <definition>Profile ostk::astrodynamics::flight::Profile::CustomPointing</definition>
        <argsstring>(const trajectory::Orbit &amp;anOrbit, const std::function&lt; Quaternion(const State &amp;)&gt; &amp;anOrientationGenerator)</argsstring>
        <name>CustomPointing</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">trajectory::Orbit</ref> &amp;</type>
          <declname>anOrbit</declname>
        </param>
        <param>
          <type>const std::function&lt; Quaternion(const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;)&gt; &amp;</type>
          <declname>anOrientationGenerator</declname>
        </param>
        <briefdescription>
<para>Construct a flight profile with custom target pointing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOrbit</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anOrientationGenerator</parametername>
</parameternamelist>
<parameterdescription>
<para>An orientation generator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flight profile </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="363" column="20" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="312" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a9c7ae3efcc54586d4cc14847c85f873c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile" kindref="compound">Profile</ref></type>
        <definition>Profile ostk::astrodynamics::flight::Profile::CustomPointing</definition>
        <argsstring>(const trajectory::Orbit &amp;anOrbit, const Shared&lt; const Target &gt; &amp;anAlignmentTargetSPtr, const Shared&lt; const Target &gt; &amp;aClockingTargetSPtr, const Angle &amp;anAngularOffset=Angle::Zero())</argsstring>
        <name>CustomPointing</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">trajectory::Orbit</ref> &amp;</type>
          <declname>anOrbit</declname>
        </param>
        <param>
          <type>const Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1_1_target" kindref="compound">Target</ref> &gt; &amp;</type>
          <declname>anAlignmentTargetSPtr</declname>
        </param>
        <param>
          <type>const Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1_1_target" kindref="compound">Target</ref> &gt; &amp;</type>
          <declname>aClockingTargetSPtr</declname>
        </param>
        <param>
          <type>const Angle &amp;</type>
          <declname>anAngularOffset</declname>
          <defval>Angle::Zero()</defval>
        </param>
        <briefdescription>
<para>Construct a flight profile with custom target pointing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOrbit</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAlignmentTarget</parametername>
</parameternamelist>
<parameterdescription>
<para>An alignment target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aClockingTarget</parametername>
</parameternamelist>
<parameterdescription>
<para>A clocking target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAngularOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>An angular offset </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flight profile </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="374" column="20" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="299" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a26f8188de4d75cc7d3f344836e97f2a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::function&lt; Quaternion(const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;)&gt;</type>
        <definition>std::function&lt; Quaternion(const State &amp;)&gt; ostk::astrodynamics::flight::Profile::AlignAndConstrain</definition>
        <argsstring>(const Shared&lt; const Target &gt; &amp;anAlignmentTargetSPtr, const Shared&lt; const Target &gt; &amp;aClockingTargetSPtr, const Angle &amp;anAngularOffset=Angle::Zero())</argsstring>
        <name>AlignAndConstrain</name>
        <param>
          <type>const Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1_1_target" kindref="compound">Target</ref> &gt; &amp;</type>
          <declname>anAlignmentTargetSPtr</declname>
        </param>
        <param>
          <type>const Shared&lt; const <ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1_1_target" kindref="compound">Target</ref> &gt; &amp;</type>
          <declname>aClockingTargetSPtr</declname>
        </param>
        <param>
          <type>const Angle &amp;</type>
          <declname>anAngularOffset</declname>
          <defval>Angle::Zero()</defval>
        </param>
        <briefdescription>
<para>Generate a function that provides a quaternion that aligns and constrains for a given state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anAlignmentAxis</parametername>
</parameternamelist>
<parameterdescription>
<para>An alignment axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aClockingAxis</parametername>
</parameternamelist>
<parameterdescription>
<para>A clocking axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAngularOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>An angular offset applied to the clocking axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="387" column="26" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="336" bodyend="475"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1affc9fb559bac3163e33883c466264564" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::flight::Profile::Profile</definition>
        <argsstring>()</argsstring>
        <name>Profile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="396" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="477" bodyend="480"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a1d10bb4daa2a6227259b160ba2f3935c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::flight::Profile::ComputeGeocentricNadirDirectionVector</definition>
        <argsstring>(const State &amp;aState)</argsstring>
        <name>ComputeGeocentricNadirDirectionVector</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="398" column="21" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="482" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1aa103dd295f872fbb585320bf122b9e59" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::flight::Profile::ComputeGeodeticNadirDirectionVector</definition>
        <argsstring>(const State &amp;aState)</argsstring>
        <name>ComputeGeodeticNadirDirectionVector</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="400" column="21" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="487" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1ae8f77b79f99383f3af92c3ff489e7d59" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::flight::Profile::ComputeTargetDirectionVector</definition>
        <argsstring>(const State &amp;aState, const ostk::astrodynamics::Trajectory &amp;aTrajectory)</argsstring>
        <name>ComputeTargetDirectionVector</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">ostk::astrodynamics::Trajectory</ref> &amp;</type>
          <declname>aTrajectory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="402" column="21" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="508" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7dc3c7acee16d9f57d89e5b44ceb7f43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::flight::Profile::ComputeTargetVelocityVector</definition>
        <argsstring>(const State &amp;aState, const ostk::astrodynamics::Trajectory &amp;aTrajectory)</argsstring>
        <name>ComputeTargetVelocityVector</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">ostk::astrodynamics::Trajectory</ref> &amp;</type>
          <declname>aTrajectory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="406" column="21" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="518" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a6967dc35e49011342f155bb39cbcd399" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::flight::Profile::ComputeTargetSlidingGroundVelocityVector</definition>
        <argsstring>(const State &amp;aState, const ostk::astrodynamics::Trajectory &amp;aTrajectory)</argsstring>
        <name>ComputeTargetSlidingGroundVelocityVector</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1_trajectory" kindref="compound">ostk::astrodynamics::Trajectory</ref> &amp;</type>
          <declname>aTrajectory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="409" column="21" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="532" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a21244ed0e0630371134ce2275dda8c54" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::flight::Profile::ComputeCelestialDirectionVector</definition>
        <argsstring>(const State &amp;aState, const Celestial &amp;aCelestial)</argsstring>
        <name>ComputeCelestialDirectionVector</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <param>
          <type>const Celestial &amp;</type>
          <declname>aCelestial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="413" column="21" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="557" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a1d13ed85e90a4fa81a2164052fa061d6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::flight::Profile::ComputeVelocityDirectionVector_ECI</definition>
        <argsstring>(const State &amp;aState)</argsstring>
        <name>ComputeVelocityDirectionVector_ECI</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="415" column="21" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="567" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a2175a3c8b7747be9a552caa3f6e989ac" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::flight::Profile::ComputeVelocityDirectionVector_ECEF</definition>
        <argsstring>(const State &amp;aState)</argsstring>
        <name>ComputeVelocityDirectionVector_ECEF</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="417" column="21" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="572" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1affd94ab4573a3771f048498db0dacc7b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::flight::Profile::ComputeOrbitalMomentumDirectionVector</definition>
        <argsstring>(const State &amp;aState)</argsstring>
        <name>ComputeOrbitalMomentumDirectionVector</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>aState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="419" column="21" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="582" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1aca16c6820e568f67ece6523848e6d654" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::flight::Profile::ComputeClockingAxisVector</definition>
        <argsstring>(const Vector3d &amp;anAlignmentAxisVector, const Vector3d &amp;aClockingVector)</argsstring>
        <name>ComputeClockingAxisVector</name>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>anAlignmentAxisVector</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>aClockingVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="421" column="21" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="577" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1flight_1_1_profile_1aebf2ef154e7e925d41c8f2b0d56a07a3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Quaternion</type>
        <definition>Quaternion ostk::astrodynamics::flight::Profile::ComputeBodyToECIQuaternion</definition>
        <argsstring>(const Axis &amp;anAlignmentAxis, const Axis &amp;aClockingAxis, const Vector3d &amp;anAlignmentAxisVector, const Vector3d &amp;aClockingAxisVector)</argsstring>
        <name>ComputeBodyToECIQuaternion</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a5095a2732f0495f64fd8610008f84080" kindref="member">Axis</ref> &amp;</type>
          <declname>anAlignmentAxis</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a5095a2732f0495f64fd8610008f84080" kindref="member">Axis</ref> &amp;</type>
          <declname>aClockingAxis</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>anAlignmentAxisVector</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>aClockingAxisVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="423" column="23" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile.cpp" bodystart="591" bodyend="635"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Spacecraft flight profile. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" line="72" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile.hpp" bodystart="71" bodyend="429"/>
    <listofallmembers>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a42a00067a392312b34a33b2614ed1032" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>accessModel</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a26f8188de4d75cc7d3f344836e97f2a5" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>AlignAndConstrain</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a5095a2732f0495f64fd8610008f84080" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>Axis</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1aebf2ef154e7e925d41c8f2b0d56a07a3" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>ComputeBodyToECIQuaternion</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a21244ed0e0630371134ce2275dda8c54" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>ComputeCelestialDirectionVector</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1aca16c6820e568f67ece6523848e6d654" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>ComputeClockingAxisVector</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a1d10bb4daa2a6227259b160ba2f3935c" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>ComputeGeocentricNadirDirectionVector</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1aa103dd295f872fbb585320bf122b9e59" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>ComputeGeodeticNadirDirectionVector</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1affd94ab4573a3771f048498db0dacc7b" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>ComputeOrbitalMomentumDirectionVector</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1ae8f77b79f99383f3af92c3ff489e7d59" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>ComputeTargetDirectionVector</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a6967dc35e49011342f155bb39cbcd399" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>ComputeTargetSlidingGroundVelocityVector</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7dc3c7acee16d9f57d89e5b44ceb7f43" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>ComputeTargetVelocityVector</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a2175a3c8b7747be9a552caa3f6e989ac" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>ComputeVelocityDirectionVector_ECEF</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a1d13ed85e90a4fa81a2164052fa061d6" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>ComputeVelocityDirectionVector_ECI</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a053646c0be60f757ac04a53e5b3bdfb2" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>constructBodyFrame</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1ad6e3b2007d0fa30b297c2dc092b0f659" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>CustomPointing</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a9c7ae3efcc54586d4cc14847c85f873c" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>CustomPointing</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1aeb8721e2f031d5569ea192510f807b16" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>getAxesAt</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1affb473c8ce59ff6f14520c8579ea7278" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>getBodyFrame</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a3d63ca2ade006c23ec450a4f4030fc61" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>getStateAt</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a024e820df226aa5873725e60f865ca76" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>getStatesAt</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a2b7d11ec1014fe36e1c23daa2062b9e7" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>InertialPointing</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1ad3ff13d3d8e1141542ba946756f44532" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>isDefined</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a437edce447cf62a16220abc89dc4d41a" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>LocalOrbitalFramePointing</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a6ab57101b752c8b7ede7cb3e3155b7ca" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>modelUPtr_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a8747e69fc10f1b068a0dd02d79da3b95" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>operator&lt;&lt;</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a93fad36aacb9e5ce30c8f017937fbd5d" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>operator=</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a71550cc961f583e02b8e6915423c58d9" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>PointingMode</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1afc2e113ef038e3dd84d9e65da38161da" prot="public" virt="virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>print</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1abb353cfa1b58766abf0c56f91db5053c" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>Profile</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a0ca170ebf0f7ba933589a0070fafaa63" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>Profile</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1affc9fb559bac3163e33883c466264564" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>Profile</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1a7189d5a2b82ad2af6bdcf1576146c440" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>TargetType</name></member>
      <member refid="classostk_1_1astrodynamics_1_1flight_1_1_profile_1ab6edc8d4ac9424bb95716d217f258dc3" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::flight::Profile</scope><name>Undefined</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
