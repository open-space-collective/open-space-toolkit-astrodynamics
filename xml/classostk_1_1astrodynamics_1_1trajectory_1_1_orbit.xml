<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kind="class" language="C++" prot="public">
    <compoundname>ostk::astrodynamics::trajectory::Orbit</compoundname>
    <basecompoundref refid="classostk_1_1astrodynamics_1_1_trajectory" prot="public" virt="non-virtual">ostk::astrodynamics::Trajectory</basecompoundref>
    <includes refid="_orbit_8hpp" local="no">Orbit.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23" prot="public" static="no" strong="yes">
        <type></type>
        <name>FrameType</name>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23aec0fc0100c4fc1ce4eea230c3dc10360" prot="public">
          <name>Undefined</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23acd3459b28418fa8fa75ffaba4f3e7c74" prot="public">
          <name>NED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23acdfe4a5ed313c123b78c17d455cfa94f" prot="public">
          <name>LVLH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23ae01a717c5a8a11cf57f7fdcb96aedc9c" prot="public">
          <name>VVLH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23a9f24a174bf2de776f4f87caef847746f" prot="public">
          <name>LVLHGD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23a4dd0e4042dbace42a872f422b740e185" prot="public">
          <name>LVLHGDGT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23a4f190ed692b3a94eb49da59c497c7f55" prot="public">
          <name>QSW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23a6d951949ba8af28fa54a8629ec0f8f17" prot="public">
          <name>TNW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23ac6a33911cc53df9bdb84aac8d86a0565" prot="public">
          <name>VNC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="62" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" bodystart="61" bodyend="76"/>
      </memberdef>
      <memberdef kind="typedef" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ac7983e7b7c8ffec20d6f8052dde38f27" prot="public" static="no">
        <type>Array&lt; <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass" kindref="compound">Pass</ref> &gt;::ConstIterator</type>
        <definition>typedef Array&lt;Pass&gt;::ConstIterator ostk::astrodynamics::trajectory::Orbit::ConstPassIterator</definition>
        <argsstring></argsstring>
        <name>ConstPassIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="78" column="35" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a63793925e09d541e3a6414e09aaae326" prot="private" static="no" mutable="no">
        <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_model" kindref="compound">orbit::Model</ref> *</type>
        <definition>const orbit::Model* ostk::astrodynamics::trajectory::Orbit::modelPtr_</definition>
        <argsstring></argsstring>
        <name>modelPtr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="200" column="24" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ac63825246d6347c7431328a7e83c938f" prot="private" static="no" mutable="no">
        <type>Shared&lt; const Celestial &gt;</type>
        <definition>Shared&lt;const Celestial&gt; ostk::astrodynamics::trajectory::Orbit::celestialObjectSPtr_</definition>
        <argsstring></argsstring>
        <name>celestialObjectSPtr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="202" column="12" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1aa60bc82dc85cd9d93f68b27ae69eef5e" prot="private" static="no" mutable="yes">
        <type>std::mutex</type>
        <definition>std::mutex ostk::astrodynamics::trajectory::Orbit::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="204" column="24" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1aa8292e63125f136f11d9de5e29309e7c" prot="private" static="no" mutable="yes">
        <type>Map&lt; Integer, <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass" kindref="compound">Pass</ref> &gt;</type>
        <definition>Map&lt;Integer, Pass&gt; ostk::astrodynamics::trajectory::Orbit::passMap_</definition>
        <argsstring></argsstring>
        <name>passMap_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="205" column="17" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a192fbae65c1d72849cfb7ce4f25efa0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::trajectory::Orbit::Orbit</definition>
        <argsstring>(const orbit::Model &amp;aModel, const Shared&lt; const Celestial &gt; &amp;aCelestialObjectSPtr)</argsstring>
        <name>Orbit</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_model" kindref="compound">orbit::Model</ref> &amp;</type>
          <declname>aModel</declname>
        </param>
        <param>
          <type>const Shared&lt; const Celestial &gt; &amp;</type>
          <declname>aCelestialObjectSPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="80" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a6b4e6ad4afbd459b24780a9c5821a632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::trajectory::Orbit::Orbit</definition>
        <argsstring>(const Array&lt; State &gt; &amp;aStateArray, const Integer &amp;anInitialRevolutionNumber, const Shared&lt; const Celestial &gt; &amp;aCelestialObjectSPtr)</argsstring>
        <name>Orbit</name>
        <param>
          <type>const Array&lt; <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &gt; &amp;</type>
          <declname>aStateArray</declname>
        </param>
        <param>
          <type>const Integer &amp;</type>
          <declname>anInitialRevolutionNumber</declname>
        </param>
        <param>
          <type>const Shared&lt; const Celestial &gt; &amp;</type>
          <declname>aCelestialObjectSPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="82" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="73" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a39167c721e7a8672ba33a4d1216e6ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::trajectory::Orbit::Orbit</definition>
        <argsstring>(const Orbit &amp;anOrbit)</argsstring>
        <name>Orbit</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">Orbit</ref> &amp;</type>
          <declname>anOrbit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="88" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a4a171a91ec565f38001037ccf0778ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::trajectory::Orbit::~Orbit</definition>
        <argsstring>()</argsstring>
        <name>~Orbit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="90" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="91" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a067aaaac7bd065de3ffc50ad00212e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">Orbit</ref> &amp;</type>
        <definition>Orbit &amp; ostk::astrodynamics::trajectory::Orbit::operator=</definition>
        <argsstring>(const Orbit &amp;anOrbit)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">Orbit</ref> &amp;</type>
          <declname>anOrbit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="92" column="11" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="117" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a08d564b1e2b697c2bc51d35c80d0ac20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::trajectory::Orbit::operator==</definition>
        <argsstring>(const Orbit &amp;anOrbit) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">Orbit</ref> &amp;</type>
          <declname>anOrbit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="94" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="132" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1afd929fc4fe8172ea56b32f03dc894b50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::trajectory::Orbit::operator!=</definition>
        <argsstring>(const Orbit &amp;anOrbit) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">Orbit</ref> &amp;</type>
          <declname>anOrbit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="96" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a1b164ea936fb2a37e0243dc2f2721aa9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::trajectory::Orbit::isDefined</definition>
        <argsstring>() const</argsstring>
        <name>isDefined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="98" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="147" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a67553e524c37d74359548676bb501cb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Integer</type>
        <definition>Integer ostk::astrodynamics::trajectory::Orbit::getRevolutionNumberAt</definition>
        <argsstring>(const Instant &amp;anInstant) const</argsstring>
        <name>getRevolutionNumberAt</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="100" column="13" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="153" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ac699476394541956810059e89b7b5732" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass" kindref="compound">Pass</ref></type>
        <definition>Pass ostk::astrodynamics::trajectory::Orbit::getPassAt</definition>
        <argsstring>(const Instant &amp;anInstant) const</argsstring>
        <name>getPassAt</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="102" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="163" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a02e911dd665b6b9510db0676bbe2885d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass" kindref="compound">Pass</ref></type>
        <definition>Pass ostk::astrodynamics::trajectory::Orbit::getPassWithRevolutionNumber</definition>
        <argsstring>(const Integer &amp;aRevolutionNumber) const</argsstring>
        <name>getPassWithRevolutionNumber</name>
        <param>
          <type>const Integer &amp;</type>
          <declname>aRevolutionNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="104" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="173" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ab53a007a76ed06ff7901edcbede3a853" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Shared&lt; const Frame &gt;</type>
        <definition>Shared&lt; const Frame &gt; ostk::astrodynamics::trajectory::Orbit::getOrbitalFrame</definition>
        <argsstring>(const Orbit::FrameType &amp;aFrameType) const</argsstring>
        <name>getOrbitalFrame</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23" kindref="member">Orbit::FrameType</ref> &amp;</type>
          <declname>aFrameType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="106" column="12" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="377" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1acfc9841a0a122ab45e9a7b945130a0dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ostk::astrodynamics::trajectory::Orbit::print</definition>
        <argsstring>(std::ostream &amp;anOutputStream, bool displayDecorator=true) const override</argsstring>
        <name>print</name>
        <reimplements refid="classostk_1_1astrodynamics_1_1_trajectory_1a5621f3ab62b023cd125505adda04e70a">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>displayDecorator</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Print trajectory to output stream. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classostk_1_1astrodynamics_1_1_trajectory_1a8eb87464a355610b52b9b2401a5ceb35" kindref="member">Trajectory</ref><sp/>trajectory<sp/>=<sp/>{<sp/>...<sp/>}<sp/>;</highlight></codeline>
<codeline><highlight class="normal">trajectory.print(std::cout,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>displayDecorator</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, display decorator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="108" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="732" bodyend="750"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a67d2e9aa18fc6a00a1dce2f480585f0c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">Orbit</ref></type>
        <definition>Orbit ostk::astrodynamics::trajectory::Orbit::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <briefdescription>
<para>Constructs an undefined orbit. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>         Undefined orbit 
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="113" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="752" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a7e32f0d281ea72dbba2199f2d91c93cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">Orbit</ref></type>
        <definition>Orbit ostk::astrodynamics::trajectory::Orbit::Circular</definition>
        <argsstring>(const Instant &amp;anEpoch, const Length &amp;anAltitude, const Angle &amp;anInclination, const Shared&lt; const Celestial &gt; &amp;aCelestialObjectSPtr)</argsstring>
        <name>Circular</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anEpoch</declname>
        </param>
        <param>
          <type>const Length &amp;</type>
          <declname>anAltitude</declname>
        </param>
        <param>
          <type>const Angle &amp;</type>
          <declname>anInclination</declname>
        </param>
        <param>
          <type>const Shared&lt; const Celestial &gt; &amp;</type>
          <declname>aCelestialObjectSPtr</declname>
        </param>
        <briefdescription>
<para>Constructs a circular orbit. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>         Model: Kepler (No Perturbation).
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit epoch </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAltitude</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit altitude (wrt. equatorial radius) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anInclination</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit inclination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCelestialObjectSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A shared pointer to a central celestial body </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Circular orbit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="124" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="757" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1afd7b71443830562d589158667a678952" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">Orbit</ref></type>
        <definition>Orbit ostk::astrodynamics::trajectory::Orbit::Equatorial</definition>
        <argsstring>(const Instant &amp;anEpoch, const Length &amp;anApoapsisAltitude, const Length &amp;aPeriapsisAltitude, const Shared&lt; const Celestial &gt; &amp;aCelestialObjectSPtr)</argsstring>
        <name>Equatorial</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anEpoch</declname>
        </param>
        <param>
          <type>const Length &amp;</type>
          <declname>anApoapsisAltitude</declname>
        </param>
        <param>
          <type>const Length &amp;</type>
          <declname>aPeriapsisAltitude</declname>
        </param>
        <param>
          <type>const Shared&lt; const Celestial &gt; &amp;</type>
          <declname>aCelestialObjectSPtr</declname>
        </param>
        <briefdescription>
<para>Constructs an equatorial orbit. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>         Model: Kepler (No Perturbation).
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit epoch </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anApoapsisAltitude</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit apoapsis altitude (wrt. equatorial radius) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPeriapsisAltitude</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit periapsis altitude (wrt. equatorial radius) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCelestialObjectSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A shared pointer to a central celestial body </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Equatorial orbit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="140" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="801" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a172a47f4555fa3b3f8e3863f5b8459fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">Orbit</ref></type>
        <definition>Orbit ostk::astrodynamics::trajectory::Orbit::CircularEquatorial</definition>
        <argsstring>(const Instant &amp;anEpoch, const Length &amp;anAltitude, const Shared&lt; const Celestial &gt; &amp;aCelestialObjectSPtr)</argsstring>
        <name>CircularEquatorial</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anEpoch</declname>
        </param>
        <param>
          <type>const Length &amp;</type>
          <declname>anAltitude</declname>
        </param>
        <param>
          <type>const Shared&lt; const Celestial &gt; &amp;</type>
          <declname>aCelestialObjectSPtr</declname>
        </param>
        <briefdescription>
<para>Constructs a circular-equatorial orbit. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>         Model: Kepler (No Perturbation).
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit epoch </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAltitude</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit altitude (wrt. equatorial radius) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCelestialObjectSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A shared pointer to a central celestial body </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Circular-equatorial orbit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="155" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="857" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a5dadd77b377ec8db4d9f74012716df9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">Orbit</ref></type>
        <definition>Orbit ostk::astrodynamics::trajectory::Orbit::GeoSynchronous</definition>
        <argsstring>(const Instant &amp;anEpoch, const Angle &amp;anInclination, const Angle &amp;aLongitude, const Shared&lt; const Celestial &gt; &amp;aCelestialObjectSPtr)</argsstring>
        <name>GeoSynchronous</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anEpoch</declname>
        </param>
        <param>
          <type>const Angle &amp;</type>
          <declname>anInclination</declname>
        </param>
        <param>
          <type>const Angle &amp;</type>
          <declname>aLongitude</declname>
        </param>
        <param>
          <type>const Shared&lt; const Celestial &gt; &amp;</type>
          <declname>aCelestialObjectSPtr</declname>
        </param>
        <briefdescription>
<para>Constructs a geosynchronous orbit. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>         Model: Kepler (J2 Perturbation).
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit epoch </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anInclination</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit inclination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aLongitude</parametername>
</parameternamelist>
<parameterdescription>
<para>A longitude above the surface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCelestialObjectSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A shared pointer to a central celestial body </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Circular orbit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="168" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="864" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1addbf182a308b0ea313d2dd2f5828477d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit" kindref="compound">Orbit</ref></type>
        <definition>Orbit ostk::astrodynamics::trajectory::Orbit::SunSynchronous</definition>
        <argsstring>(const Instant &amp;anEpoch, const Length &amp;anAltitude, const Time &amp;aLocalTimeAtDescendingNode, const Shared&lt; const Celestial &gt; &amp;aCelestialObjectSPtr, const Angle &amp;anArgumentOfLatitude=Angle::Zero())</argsstring>
        <name>SunSynchronous</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anEpoch</declname>
        </param>
        <param>
          <type>const Length &amp;</type>
          <declname>anAltitude</declname>
        </param>
        <param>
          <type>const Time &amp;</type>
          <declname>aLocalTimeAtDescendingNode</declname>
        </param>
        <param>
          <type>const Shared&lt; const Celestial &gt; &amp;</type>
          <declname>aCelestialObjectSPtr</declname>
        </param>
        <param>
          <type>const Angle &amp;</type>
          <declname>anArgumentOfLatitude</declname>
          <defval>Angle::Zero()</defval>
        </param>
        <briefdescription>
<para>Constructs a Sun-synchronous orbit. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>         Model: Kepler (J2 Perturbation).
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit epoch </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anAltitude</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit altitude (wrt. equatorial radius) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aLocalTimeAtDescendingNode</parametername>
</parameternamelist>
<parameterdescription>
<para>A local time at descending node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCelestialObjectSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A shared pointer to a central celestial body </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anArgumentOfLatitude</parametername>
</parameternamelist>
<parameterdescription>
<para>An argument of latitude </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sun-synchronous orbit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Capderou M., Handbook of Satellite Orbits: From Kepler to GPS, p.292</para>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="185" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="931" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a1f1c1d83a8aca5f924e053a7e197c2a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String ostk::astrodynamics::trajectory::Orbit::StringFromFrameType</definition>
        <argsstring>(const Orbit::FrameType &amp;aFrameType)</argsstring>
        <name>StringFromFrameType</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23" kindref="member">Orbit::FrameType</ref> &amp;</type>
          <declname>aFrameType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="193" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="1088" bodyend="1125"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a970789fecee44d1fb733b9ada798f0d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Array&lt; Pair&lt; Index, <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass" kindref="compound">Pass</ref> &gt; &gt;</type>
        <definition>Array&lt; Pair&lt; Index, Pass &gt; &gt; ostk::astrodynamics::trajectory::Orbit::ComputePasses</definition>
        <argsstring>(const Array&lt; State &gt; &amp;aStateArray, const Integer &amp;anInitialRevolutionNumber)</argsstring>
        <name>ComputePasses</name>
        <param>
          <type>const Array&lt; <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_state" kindref="compound">State</ref> &gt; &amp;</type>
          <declname>aStateArray</declname>
        </param>
        <param>
          <type>const Integer &amp;</type>
          <declname>anInitialRevolutionNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="195" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="1132" bodyend="1273"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1af8446f2955df120d726432c94094f52b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String ostk::astrodynamics::trajectory::Orbit::generateFrameName</definition>
        <argsstring>(const Orbit::FrameType &amp;aFrameType) const</argsstring>
        <name>generateFrameName</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23" kindref="member">Orbit::FrameType</ref> &amp;</type>
          <declname>aFrameType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="207" column="12" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="1127" bodyend="1130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a0a3dfea131274c942528fd3b87e38f65" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Instant</type>
        <definition>Instant ostk::astrodynamics::trajectory::Orbit::GetCrossingInstant</definition>
        <argsstring>(const Instant &amp;anEpoch, const Instant &amp;previousInstant, const Instant &amp;currentInstant, const std::function&lt; double(double)&gt; &amp;getValue)</argsstring>
        <name>GetCrossingInstant</name>
        <param>
          <type>const Instant &amp;</type>
          <declname>anEpoch</declname>
        </param>
        <param>
          <type>const Instant &amp;</type>
          <declname>previousInstant</declname>
        </param>
        <param>
          <type>const Instant &amp;</type>
          <declname>currentInstant</declname>
        </param>
        <param>
          <type>const std::function&lt; double(double)&gt; &amp;</type>
          <declname>getValue</declname>
        </param>
        <briefdescription>
<para>Find the Instant at which the return value of <computeroutput>getValue</computeroutput> crosses zero. Use a bisection search to find the Instant between <computeroutput>previousInstant</computeroutput> and <computeroutput>nextInstant</computeroutput> at which the return value of <computeroutput>getValue</computeroutput> crosses zero. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit epoch from which to measure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>previousInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound of search </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>upper bound of search </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>getValue</parametername>
</parameternamelist>
<parameterdescription>
<para>function that receives a duration [s] from <computeroutput>anEpoch</computeroutput> and returns a real value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Instant at which the crossing occurs </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="218" column="20" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.cpp" bodystart="1275" bodyend="1291"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Gravitationally curved trajectory of an object. </para>
    </briefdescription>
    <detaileddescription>
<para><ulink url="https://en.wikipedia.org/wiki/Orbit">https://en.wikipedia.org/wiki/Orbit</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ostk::astrodynamics::Trajectory</label>
        <link refid="classostk_1_1astrodynamics_1_1_trajectory"/>
      </node>
      <node id="1">
        <label>ostk::astrodynamics::trajectory::Orbit</label>
        <link refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ostk::astrodynamics::Trajectory</label>
        <link refid="classostk_1_1astrodynamics_1_1_trajectory"/>
      </node>
      <node id="1">
        <label>ostk::astrodynamics::trajectory::Orbit</label>
        <link refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" line="59" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit.hpp" bodystart="58" bodyend="224"/>
    <listofallmembers>
      <member refid="classostk_1_1astrodynamics_1_1_trajectory_1a00e0200bc70fc7c5c764b2204f3232f8" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>accessModel</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ac63825246d6347c7431328a7e83c938f" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>celestialObjectSPtr_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a7e32f0d281ea72dbba2199f2d91c93cc" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>Circular</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a172a47f4555fa3b3f8e3863f5b8459fe" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>CircularEquatorial</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a970789fecee44d1fb733b9ada798f0d8" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>ComputePasses</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ac7983e7b7c8ffec20d6f8052dde38f27" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>ConstPassIterator</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1afd7b71443830562d589158667a678952" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>Equatorial</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ada07446a77b5ceb5ba20d092de1e2e23" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>FrameType</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1af8446f2955df120d726432c94094f52b" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>generateFrameName</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a5dadd77b377ec8db4d9f74012716df9a" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>GeoSynchronous</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a0a3dfea131274c942528fd3b87e38f65" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>GetCrossingInstant</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ab53a007a76ed06ff7901edcbede3a853" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>getOrbitalFrame</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1ac699476394541956810059e89b7b5732" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>getPassAt</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a02e911dd665b6b9510db0676bbe2885d" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>getPassWithRevolutionNumber</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a67553e524c37d74359548676bb501cb3" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>getRevolutionNumberAt</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_trajectory_1ab72172193ac72db5b7acf922d1b0a9b7" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>getStateAt</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_trajectory_1a828ef112e449b697c961e61825b48cbc" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>getStatesAt</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a1b164ea936fb2a37e0243dc2f2721aa9" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>isDefined</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a63793925e09d541e3a6414e09aaae326" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>modelPtr_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1aa60bc82dc85cd9d93f68b27ae69eef5e" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>mutex_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1afd929fc4fe8172ea56b32f03dc894b50" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>operator!=</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_trajectory_1aa46d34603ab19531c6b6dfde9b394e85" prot="public" virt="non-virtual" ambiguityscope="ostk::astrodynamics::Trajectory::"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>operator!=</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a067aaaac7bd065de3ffc50ad00212e28" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>operator=</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_trajectory_1ad98dea12af414af8162b085cdd5dd511" prot="public" virt="non-virtual" ambiguityscope="ostk::astrodynamics::Trajectory::"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>operator=</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a08d564b1e2b697c2bc51d35c80d0ac20" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>operator==</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_trajectory_1aab7ed9137581cdc28ce569f8165c1e60" prot="public" virt="non-virtual" ambiguityscope="ostk::astrodynamics::Trajectory::"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>operator==</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a192fbae65c1d72849cfb7ce4f25efa0f" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>Orbit</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a6b4e6ad4afbd459b24780a9c5821a632" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>Orbit</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a39167c721e7a8672ba33a4d1216e6ec3" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>Orbit</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1aa8292e63125f136f11d9de5e29309e7c" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>passMap_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_trajectory_1a7c3e5cb45279eb2d7cbf32c2347d3840" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>Position</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1acfc9841a0a122ab45e9a7b945130a0dd" prot="public" virt="virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>print</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a1f1c1d83a8aca5f924e053a7e197c2a2" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>StringFromFrameType</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1addbf182a308b0ea313d2dd2f5828477d" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>SunSynchronous</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_trajectory_1a8eb87464a355610b52b9b2401a5ceb35" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>Trajectory</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_trajectory_1a333aa41110b47e8c69a97aae3669032c" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>Trajectory</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_trajectory_1adc2a737f516231faa65684ab6232dc7e" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>Trajectory</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a67d2e9aa18fc6a00a1dce2f480585f0c" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>Undefined</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1_orbit_1a4a171a91ec565f38001037ccf0778ddc" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::Orbit</scope><name>~Orbit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
