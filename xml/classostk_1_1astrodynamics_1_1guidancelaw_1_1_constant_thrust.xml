<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust" kind="class" language="C++" prot="public">
    <compoundname>ostk::astrodynamics::guidancelaw::ConstantThrust</compoundname>
    <basecompoundref refid="classostk_1_1astrodynamics_1_1_guidance_law" prot="public" virt="non-virtual">ostk::astrodynamics::GuidanceLaw</basecompoundref>
    <includes refid="_constant_thrust_8hpp" local="no">ConstantThrust.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1a1384198caac8307bf4f4059763eada0c" prot="private" static="no" mutable="no">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_local_orbital_frame_direction" kindref="compound">LocalOrbitalFrameDirection</ref></type>
        <definition>LocalOrbitalFrameDirection ostk::astrodynamics::guidancelaw::ConstantThrust::localOrbitalFrameDirection_</definition>
        <argsstring></argsstring>
        <name>localOrbitalFrameDirection_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.hpp" line="98" column="32" bodyfile="include/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1a572c63513c9359ecb25b803a350032e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::guidancelaw::ConstantThrust::ConstantThrust</definition>
        <argsstring>(const LocalOrbitalFrameDirection &amp;aThrustDirection)</argsstring>
        <name>ConstantThrust</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_local_orbital_frame_direction" kindref="compound">LocalOrbitalFrameDirection</ref> &amp;</type>
          <declname>aThrustDirection</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocalOrbitalFrameDirection<sp/>aThrustDirection<sp/>=<sp/>{<sp/>...<sp/>};</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1a572c63513c9359ecb25b803a350032e3" kindref="member">ConstantThrust</ref><sp/>constantThrust<sp/>=<sp/>{aThrustDirection};</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aThrustDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>A local orbital frame thrust direction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.hpp" line="43" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1ad74133941ea11a15480e48fe86b4128d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ostk::astrodynamics::guidancelaw::ConstantThrust::~ConstantThrust</definition>
        <argsstring>() override</argsstring>
        <name>~ConstantThrust</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.hpp" line="46" column="13" bodyfile="src/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.cpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1ab70359e36aee88fd810acd524afc2d69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1_local_orbital_frame_direction" kindref="compound">LocalOrbitalFrameDirection</ref></type>
        <definition>LocalOrbitalFrameDirection ostk::astrodynamics::guidancelaw::ConstantThrust::getLocalThrustDirection</definition>
        <argsstring>() const</argsstring>
        <name>getLocalThrustDirection</name>
        <briefdescription>
<para>Get local thrust direction. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="normal">LocalOrbitalFrameDirection<sp/>localThrustDirection<sp/>=</highlight></codeline>
<codeline><highlight class="normal">constantThrustThruster.getLocalThrustDirection();</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Local orbital frame direction </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.hpp" line="63" column="32" bodyfile="src/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.cpp" bodystart="41" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1ae1c155d65dc553706039df0608f7de85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Vector3d</type>
        <definition>Vector3d ostk::astrodynamics::guidancelaw::ConstantThrust::calculateThrustAccelerationAt</definition>
        <argsstring>(const Instant &amp;anInstant, const Vector3d &amp;aPositionCoordinates, const Vector3d &amp;aVelocityCoordinates, const Real &amp;aThrustAcceleration, const Shared&lt; const Frame &gt; &amp;outputFrameSPtr) const override</argsstring>
        <name>calculateThrustAccelerationAt</name>
        <reimplements refid="classostk_1_1astrodynamics_1_1_guidance_law_1a2fe8fbe5b61d15040da6de231772b346">calculateThrustAccelerationAt</reimplements>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>aPositionCoordinates</declname>
        </param>
        <param>
          <type>const Vector3d &amp;</type>
          <declname>aVelocityCoordinates</declname>
        </param>
        <param>
          <type>const Real &amp;</type>
          <declname>aThrustAcceleration</declname>
        </param>
        <param>
          <type>const Shared&lt; const Frame &gt; &amp;</type>
          <declname>outputFrameSPtr</declname>
        </param>
        <briefdescription>
<para>Compute acceleration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPositionCoordinates</parametername>
</parameternamelist>
<parameterdescription>
<para>The position coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aVelocityCoordinates</parametername>
</parameternamelist>
<parameterdescription>
<para>The velocity coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aThrustAcceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>The thrust acceleration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputFrameSPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The frame in which the acceleration is expressed</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Acceleration </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.hpp" line="74" column="22" bodyfile="src/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.cpp" bodystart="51" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1a651a2c66e831e8bfdbac2c6f6c39b725" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ostk::astrodynamics::guidancelaw::ConstantThrust::print</definition>
        <argsstring>(std::ostream &amp;anOutputStream, bool displayDecorator=true) const override</argsstring>
        <name>print</name>
        <reimplements refid="classostk_1_1astrodynamics_1_1_guidance_law_1aec533d7bc01b6b0efcfe6eca7a804860">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>displayDecorator</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Print constant thrust thruster dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>displayDecorator</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether or not to display the decorator during printing </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.hpp" line="87" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.cpp" bodystart="79" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1a1a30dcef3ba9ec25eccf8ef5a72657be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const ConstantThrust &amp;aConstantThrust)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust" kindref="compound">ConstantThrust</ref> &amp;</type>
          <declname>aConstantThrust</declname>
        </param>
        <briefdescription>
<para>Output stream operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in]</parametername>
</parameternamelist>
<parameterdescription>
<para>anOutputStream An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aThruster</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant thrust thruster dynamics </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.hpp" line="53" column="12" bodyfile="src/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.cpp" bodystart="34" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1aa596608b9b6be8ffe444b36ca67f7799" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust" kindref="compound">ConstantThrust</ref></type>
        <definition>ConstantThrust ostk::astrodynamics::guidancelaw::ConstantThrust::Intrack</definition>
        <argsstring>(const bool &amp;velocityDirection=true)</argsstring>
        <name>Intrack</name>
        <param>
          <type>const bool &amp;</type>
          <declname>velocityDirection</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Intrack Constant thrust dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>velocityDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>A bool representing the direction of the thrust, with true meaning along the velocity direction. Defaults to true.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Constant Thrust dynamics </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.hpp" line="95" column="27" bodyfile="src/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.cpp" bodystart="91" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Define the acceleration experienced by a point mass due to a constant thrust guidance law. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ostk::astrodynamics::GuidanceLaw</label>
        <link refid="classostk_1_1astrodynamics_1_1_guidance_law"/>
      </node>
      <node id="1">
        <label>ostk::astrodynamics::guidancelaw::ConstantThrust</label>
        <link refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>String</label>
      </node>
      <node id="2">
        <label>ostk::astrodynamics::GuidanceLaw</label>
        <link refid="classostk_1_1astrodynamics_1_1_guidance_law"/>
        <childnode refid="3" relation="usage">
          <edgelabel>name_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>ostk::astrodynamics::guidancelaw::ConstantThrust</label>
        <link refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.hpp" line="33" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/GuidanceLaw/ConstantThrust.hpp" bodystart="32" bodyend="99"/>
    <listofallmembers>
      <member refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1ae1c155d65dc553706039df0608f7de85" prot="public" virt="virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>calculateThrustAccelerationAt</name></member>
      <member refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1a572c63513c9359ecb25b803a350032e3" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>ConstantThrust</name></member>
      <member refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1ab70359e36aee88fd810acd524afc2d69" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>getLocalThrustDirection</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_guidance_law_1a9070d37e137647cc0927c49d0991978c" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>getName</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_guidance_law_1ad14e3f6378328956164d8cbc6957962a" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>GuidanceLaw</name></member>
      <member refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1aa596608b9b6be8ffe444b36ca67f7799" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>Intrack</name></member>
      <member refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1a1384198caac8307bf4f4059763eada0c" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>localOrbitalFrameDirection_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_guidance_law_1a9ccb9065feabe9baff67daba6759106e" prot="protected" virt="non-virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>name_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1a1a30dcef3ba9ec25eccf8ef5a72657be" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>operator&lt;&lt;</name></member>
      <member refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1a651a2c66e831e8bfdbac2c6f6c39b725" prot="public" virt="virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>print</name></member>
      <member refid="classostk_1_1astrodynamics_1_1guidancelaw_1_1_constant_thrust_1ad74133941ea11a15480e48fe86b4128d" prot="public" virt="virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>~ConstantThrust</name></member>
      <member refid="classostk_1_1astrodynamics_1_1_guidance_law_1a6efc5c9384e96c01924c73e72ff7a33b" prot="public" virt="virtual"><scope>ostk::astrodynamics::guidancelaw::ConstantThrust</scope><name>~GuidanceLaw</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
