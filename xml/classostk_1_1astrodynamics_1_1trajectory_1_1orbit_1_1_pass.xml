<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass" kind="class" language="C++" prot="public">
    <compoundname>ostk::astrodynamics::trajectory::orbit::Pass</compoundname>
    <includes refid="_pass_8hpp" local="no">Pass.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1ab4748b44703914d51808fa8815e2bf15" prot="public" static="no" strong="yes">
        <type></type>
        <name>Type</name>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1ab4748b44703914d51808fa8815e2bf15aec0fc0100c4fc1ce4eea230c3dc10360" prot="public">
          <name>Undefined</name>
          <briefdescription>
<para>The type is undefined. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1ab4748b44703914d51808fa8815e2bf15aae94f80b3ce82062a5dd7815daa04f9d" prot="public">
          <name>Complete</name>
          <briefdescription>
<para>The pass is a complete revolution. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1ab4748b44703914d51808fa8815e2bf15a44ffd38a6dea695cbe2b34efdcc6cf27" prot="public">
          <name>Partial</name>
          <briefdescription>
<para>The pass is a partial revolution. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The type of the pass. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="40" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="enum" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1aabe56ba8cb115e2dd98ec81419e286ba" prot="public" static="no" strong="yes">
        <type></type>
        <name>Phase</name>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1aabe56ba8cb115e2dd98ec81419e286baaec0fc0100c4fc1ce4eea230c3dc10360" prot="public">
          <name>Undefined</name>
          <briefdescription>
<para>The phase is undefined. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1aabe56ba8cb115e2dd98ec81419e286baacf3fb1ff52ea1eed3347ac5401ee7f0c" prot="public">
          <name>Ascending</name>
          <briefdescription>
<para>The pass is in the ascending phase. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1aabe56ba8cb115e2dd98ec81419e286baae3cf5ac19407b1a62c6fccaff675a53b" prot="public">
          <name>Descending</name>
          <briefdescription>
<para>The pass is in the descending phase. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The phase of the pass. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="49" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" bodystart="48" bodyend="53"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a7ba7cad432e9a2b9405dcfb8cbe26796" prot="private" static="no" mutable="no">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1ab4748b44703914d51808fa8815e2bf15" kindref="member">Pass::Type</ref></type>
        <definition>Pass::Type ostk::astrodynamics::trajectory::orbit::Pass::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="175" column="16" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a4d575b7063d1804d151ae4e25ce8d283" prot="private" static="no" mutable="no">
        <type>Integer</type>
        <definition>Integer ostk::astrodynamics::trajectory::orbit::Pass::revolutionNumber_</definition>
        <argsstring></argsstring>
        <name>revolutionNumber_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="177" column="13" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1afd0aa4f87c0cf900d3411d7b4bcf2999" prot="private" static="no" mutable="no">
        <type>Instant</type>
        <definition>Instant ostk::astrodynamics::trajectory::orbit::Pass::instantAtAscendingNode_</definition>
        <argsstring></argsstring>
        <name>instantAtAscendingNode_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="178" column="13" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a04ee2d98d4d0a190f7ba7fb87ad1a774" prot="private" static="no" mutable="no">
        <type>Instant</type>
        <definition>Instant ostk::astrodynamics::trajectory::orbit::Pass::instantAtNorthPoint_</definition>
        <argsstring></argsstring>
        <name>instantAtNorthPoint_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="179" column="13" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a37213f4de5275b3a47f8e3257107393d" prot="private" static="no" mutable="no">
        <type>Instant</type>
        <definition>Instant ostk::astrodynamics::trajectory::orbit::Pass::instantAtDescendingNode_</definition>
        <argsstring></argsstring>
        <name>instantAtDescendingNode_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="180" column="13" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1ad88cb5cf446c1f56d1711a6294fcacad" prot="private" static="no" mutable="no">
        <type>Instant</type>
        <definition>Instant ostk::astrodynamics::trajectory::orbit::Pass::instantAtSouthPoint_</definition>
        <argsstring></argsstring>
        <name>instantAtSouthPoint_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="181" column="13" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a616c0db7ab0d961fee3f0db66f6ecfed" prot="private" static="no" mutable="no">
        <type>Instant</type>
        <definition>Instant ostk::astrodynamics::trajectory::orbit::Pass::instantAtPassBreak_</definition>
        <argsstring></argsstring>
        <name>instantAtPassBreak_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="182" column="13" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a9b7b78d50c622aa6998572a1d5375ea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astrodynamics::trajectory::orbit::Pass::Pass</definition>
        <argsstring>(const Integer &amp;aRevolutionNumber, const Instant &amp;anInstantAtAscendingNode, const Instant &amp;anInstantAtNorthPoint, const Instant &amp;anInstantAtDescendingNode, const Instant &amp;anInstantAtSouthPoint, const Instant &amp;anInstantAtPassBreak)</argsstring>
        <name>Pass</name>
        <param>
          <type>const Integer &amp;</type>
          <declname>aRevolutionNumber</declname>
        </param>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstantAtAscendingNode</declname>
        </param>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstantAtNorthPoint</declname>
        </param>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstantAtDescendingNode</declname>
        </param>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstantAtSouthPoint</declname>
        </param>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstantAtPassBreak</declname>
        </param>
        <briefdescription>
<para>Constructs a pass. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aRevolutionNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The revolution number of the pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anInstantAtAscendingNode</parametername>
</parameternamelist>
<parameterdescription>
<para>The instant at the ascending node of the pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anInstantAtNorthPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The instant at the north point of the pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anInstantAtDescendingNode</parametername>
</parameternamelist>
<parameterdescription>
<para>The instant at the descending node of the pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anInstantAtSouthPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The instant at the south point of the pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anInstantAtPassBreak</parametername>
</parameternamelist>
<parameterdescription>
<para>The instant at the pass break, i.e. next ascending node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="63" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="17" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1abf7abfa2e4bbe579fa15a7c2fd34eb80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::trajectory::orbit::Pass::operator==</definition>
        <argsstring>(const Pass &amp;aPass) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass" kindref="compound">Pass</ref> &amp;</type>
          <declname>aPass</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPass</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass to compare to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the passes are equal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="76" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="86" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1afd932139d1ded37ee9969c69b1209f65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::trajectory::orbit::Pass::operator!=</definition>
        <argsstring>(const Pass &amp;aPass) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass" kindref="compound">Pass</ref> &amp;</type>
          <declname>aPass</declname>
        </param>
        <briefdescription>
<para>Inequality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPass</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass to compare to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the passes are not equal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="82" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a23855be8d8ff78a2cf8c8fc0ff122d42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::trajectory::orbit::Pass::isDefined</definition>
        <argsstring>() const</argsstring>
        <name>isDefined</name>
        <briefdescription>
<para>Checks if the pass is defined. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the pass is defined. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="94" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a3e945c5b22a9d4b878a2d170ac927a23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::astrodynamics::trajectory::orbit::Pass::isComplete</definition>
        <argsstring>() const</argsstring>
        <name>isComplete</name>
        <briefdescription>
<para>Checks if the pass is complete. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the pass is complete. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="99" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="145" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a1bfb88023b13cad2be2d23daaf04cd05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1ab4748b44703914d51808fa8815e2bf15" kindref="member">Pass::Type</ref></type>
        <definition>Pass::Type ostk::astrodynamics::trajectory::orbit::Pass::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <briefdescription>
<para>Gets the type of the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type of the pass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="104" column="16" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="155" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1af6460907d361d0b6c993d2643aaa0f22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Integer</type>
        <definition>Integer ostk::astrodynamics::trajectory::orbit::Pass::getRevolutionNumber</definition>
        <argsstring>() const</argsstring>
        <name>getRevolutionNumber</name>
        <briefdescription>
<para>Gets the revolution number of the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The revolution number of the pass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="109" column="13" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="165" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1aa2ab48943d0f51284dd7517baf032987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Duration</type>
        <definition>Duration ostk::astrodynamics::trajectory::orbit::Pass::getDuration</definition>
        <argsstring>() const</argsstring>
        <name>getDuration</name>
        <briefdescription>
<para>Gets the duration of the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The duration of the pass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="114" column="14" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="175" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a304cc0aa025947bf2ec4c275da2ef752" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Instant</type>
        <definition>Instant ostk::astrodynamics::trajectory::orbit::Pass::getStartInstant</definition>
        <argsstring>() const</argsstring>
        <name>getStartInstant</name>
        <briefdescription>
<para>Get the start instant of the pass. For partial passes, this is the minimum defined instant. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The start instant of the pass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="119" column="13" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="190" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a35f910ef3b112067daa6ebfd8305ac9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Instant</type>
        <definition>Instant ostk::astrodynamics::trajectory::orbit::Pass::getEndInstant</definition>
        <argsstring>() const</argsstring>
        <name>getEndInstant</name>
        <briefdescription>
<para>Get the end instant of the pass. For partial passes, this is the maximum defined instant. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The end instant of the pass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="124" column="13" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="220" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a13fd5c80c0b7f9b05de6d71d1893ea12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Instant &amp;</type>
        <definition>const Instant &amp; ostk::astrodynamics::trajectory::orbit::Pass::accessInstantAtAscendingNode</definition>
        <argsstring>() const</argsstring>
        <name>accessInstantAtAscendingNode</name>
        <briefdescription>
<para>Accesses the instant at the ascending node of the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The instant at the ascending node of the pass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="129" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="250" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1afe4c1f4a38d4d9e98b96337e0f745a7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Instant &amp;</type>
        <definition>const Instant &amp; ostk::astrodynamics::trajectory::orbit::Pass::accessInstantAtNorthPoint</definition>
        <argsstring>() const</argsstring>
        <name>accessInstantAtNorthPoint</name>
        <briefdescription>
<para>Accesses the instant at the north point of the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The instant at the north point of the pass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="134" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="260" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a6576ed61cbe52f8dae929a96c1f5bc0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Instant &amp;</type>
        <definition>const Instant &amp; ostk::astrodynamics::trajectory::orbit::Pass::accessInstantAtDescendingNode</definition>
        <argsstring>() const</argsstring>
        <name>accessInstantAtDescendingNode</name>
        <briefdescription>
<para>Accesses the instant at the descending node of the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The instant at the descending node of the pass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="139" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="270" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a25fadf5c4c2d9094a2b0d5d6ffc4d628" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Instant &amp;</type>
        <definition>const Instant &amp; ostk::astrodynamics::trajectory::orbit::Pass::accessInstantAtSouthPoint</definition>
        <argsstring>() const</argsstring>
        <name>accessInstantAtSouthPoint</name>
        <briefdescription>
<para>Accesses the instant at the south point of the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The instant at the south point of the pass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="144" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="280" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a51f471116f948b1a5e6f45dc9548bb37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Instant &amp;</type>
        <definition>const Instant &amp; ostk::astrodynamics::trajectory::orbit::Pass::accessInstantAtPassBreak</definition>
        <argsstring>() const</argsstring>
        <name>accessInstantAtPassBreak</name>
        <briefdescription>
<para>Accesses the instant at the break of the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The instant at the break of the pass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="149" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="290" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a776c7e5d072f3a0478bfe4d857a35c38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostk::astrodynamics::trajectory::orbit::Pass::print</definition>
        <argsstring>(std::ostream &amp;anOutputStream, bool displayDecorator=true) const</argsstring>
        <name>print</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>displayDecorator</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Print. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>displayDecorator</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to display the decorator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="155" column="10" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="300" bodyend="325"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a62c2257085205d3c714c5ca4350f84f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const Pass &amp;aPass)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass" kindref="compound">Pass</ref> &amp;</type>
          <declname>aPass</declname>
        </param>
        <briefdescription>
<para>Output stream operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPass</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass to output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output stream. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="89" column="12" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="133" bodyend="138"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a6745523fe10370a49aacd4e2176c4776" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass" kindref="compound">Pass</ref></type>
        <definition>Pass ostk::astrodynamics::trajectory::orbit::Pass::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <briefdescription>
<para>Creates an undefined pass. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An undefined pass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="160" column="17" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="327" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a49bd989a4aeaa90a7669c4341c0af880" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String ostk::astrodynamics::trajectory::orbit::Pass::StringFromType</definition>
        <argsstring>(const Pass::Type &amp;aType)</argsstring>
        <name>StringFromType</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1ab4748b44703914d51808fa8815e2bf15" kindref="member">Pass::Type</ref> &amp;</type>
          <declname>aType</declname>
        </param>
        <briefdescription>
<para>Converts a pass type to a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aType</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The string representation of the pass type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="166" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="339" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a03cb9c16b72f2b20e48a4b03e5256b01" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String ostk::astrodynamics::trajectory::orbit::Pass::StringFromPhase</definition>
        <argsstring>(const Pass::Phase &amp;aPhase)</argsstring>
        <name>StringFromPhase</name>
        <param>
          <type>const <ref refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1aabe56ba8cb115e2dd98ec81419e286ba" kindref="member">Pass::Phase</ref> &amp;</type>
          <declname>aPhase</declname>
        </param>
        <briefdescription>
<para>Converts a pass phase to a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPhase</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass phase. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The string representation of the pass phase. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="172" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.cpp" bodystart="359" bodyend="377"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A revolution of an orbiting object. </para>
    </briefdescription>
    <detaileddescription>
<para>This class represents a pass, which is a revolution of an orbiting object. It provides methods to get the type of the pass, the revolution number, and the instants at various points of the pass. <simplesect kind="see"><para><ulink url="http://help.agi.com/stk/11.3.0/index.htm#vo/sat_pass.htm">http://help.agi.com/stk/11.3.0/index.htm#vo/sat_pass.htm</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" line="35" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Trajectory/Orbit/Pass.hpp" bodystart="34" bodyend="183"/>
    <listofallmembers>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a13fd5c80c0b7f9b05de6d71d1893ea12" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>accessInstantAtAscendingNode</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a6576ed61cbe52f8dae929a96c1f5bc0e" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>accessInstantAtDescendingNode</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1afe4c1f4a38d4d9e98b96337e0f745a7c" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>accessInstantAtNorthPoint</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a51f471116f948b1a5e6f45dc9548bb37" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>accessInstantAtPassBreak</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a25fadf5c4c2d9094a2b0d5d6ffc4d628" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>accessInstantAtSouthPoint</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1aa2ab48943d0f51284dd7517baf032987" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>getDuration</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a35f910ef3b112067daa6ebfd8305ac9f" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>getEndInstant</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1af6460907d361d0b6c993d2643aaa0f22" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>getRevolutionNumber</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a304cc0aa025947bf2ec4c275da2ef752" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>getStartInstant</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a1bfb88023b13cad2be2d23daaf04cd05" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>getType</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1afd0aa4f87c0cf900d3411d7b4bcf2999" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>instantAtAscendingNode_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a37213f4de5275b3a47f8e3257107393d" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>instantAtDescendingNode_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a04ee2d98d4d0a190f7ba7fb87ad1a774" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>instantAtNorthPoint_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a616c0db7ab0d961fee3f0db66f6ecfed" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>instantAtPassBreak_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1ad88cb5cf446c1f56d1711a6294fcacad" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>instantAtSouthPoint_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a3e945c5b22a9d4b878a2d170ac927a23" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>isComplete</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a23855be8d8ff78a2cf8c8fc0ff122d42" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>isDefined</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1afd932139d1ded37ee9969c69b1209f65" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>operator!=</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a62c2257085205d3c714c5ca4350f84f4" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>operator&lt;&lt;</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1abf7abfa2e4bbe579fa15a7c2fd34eb80" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>operator==</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a9b7b78d50c622aa6998572a1d5375ea7" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>Pass</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1aabe56ba8cb115e2dd98ec81419e286ba" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>Phase</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a776c7e5d072f3a0478bfe4d857a35c38" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>print</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a4d575b7063d1804d151ae4e25ce8d283" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>revolutionNumber_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a03cb9c16b72f2b20e48a4b03e5256b01" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>StringFromPhase</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a49bd989a4aeaa90a7669c4341c0af880" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>StringFromType</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1ab4748b44703914d51808fa8815e2bf15" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>Type</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a7ba7cad432e9a2b9405dcfb8cbe26796" prot="private" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>type_</name></member>
      <member refid="classostk_1_1astrodynamics_1_1trajectory_1_1orbit_1_1_pass_1a6745523fe10370a49aacd4e2176c4776" prot="public" virt="non-virtual"><scope>ostk::astrodynamics::trajectory::orbit::Pass</scope><name>Undefined</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
