<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform" kind="class" language="C++" prot="public">
    <compoundname>ostk::astro::flight::profile::models::Transform</compoundname>
    <basecompoundref refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model" prot="public" virt="virtual">ostk::astro::flight::profile::Model</basecompoundref>
    <includes refid="_transform_8hpp" local="no">Transform.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1adca7c31f9540544e78d79337af35fae8" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceostk_1_1astro_1_1flight_1_1profile_1_1models_1a7e9732cb31adb5d5c1f85f7bad1f3424" kindref="member">DynamicProvider</ref></type>
        <definition>DynamicProvider ostk::astro::flight::profile::models::Transform::transformProvider_</definition>
        <argsstring></argsstring>
        <name>transformProvider_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="82" column="21" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a809ac072f615cf65ecf9dd1125282632" prot="private" static="no" mutable="no">
        <type>Shared&lt; const Frame &gt;</type>
        <definition>Shared&lt;const Frame&gt; ostk::astro::flight::profile::models::Transform::frameSPtr_</definition>
        <argsstring></argsstring>
        <name>frameSPtr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="83" column="12" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a95d76db47af0764c1a05c32298799d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::astro::flight::profile::models::Transform::Transform</definition>
        <argsstring>(const DynamicProvider &amp;aDynamicTransformProvider, const Shared&lt; const Frame &gt; &amp;aFrameSPtr)</argsstring>
        <name>Transform</name>
        <param>
          <type>const <ref refid="namespaceostk_1_1astro_1_1flight_1_1profile_1_1models_1a7e9732cb31adb5d5c1f85f7bad1f3424" kindref="member">DynamicProvider</ref> &amp;</type>
          <declname>aDynamicTransformProvider</declname>
        </param>
        <param>
          <type>const Shared&lt; const Frame &gt; &amp;</type>
          <declname>aFrameSPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="44" column="5" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.cpp" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1aafd4791dacf320ddedddefbc8d0f2e0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform" kindref="compound">Transform</ref> *</type>
        <definition>Transform * ostk::astro::flight::profile::models::Transform::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1aabf68c114849fa16a570b694579da40f">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="46" column="23" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a2d0f1f3cc3f340c5617125bea08a9930" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ostk::astro::flight::profile::models::Transform::isDefined</definition>
        <argsstring>() const override</argsstring>
        <name>isDefined</name>
        <reimplements refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1a0af64ad25ed8d8b2510a70bfe5bcb971">isDefined</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="50" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a6288febae942c92508173db08b4554b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classostk_1_1astro_1_1flight_1_1profile_1_1_state" kindref="compound">State</ref></type>
        <definition>State ostk::astro::flight::profile::models::Transform::calculateStateAt</definition>
        <argsstring>(const Instant &amp;anInstant) const override</argsstring>
        <name>calculateStateAt</name>
        <reimplements refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1a1b205fa29b50fcfc06c99234a8579eb8">calculateStateAt</reimplements>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="52" column="19" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.cpp" bodystart="35" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a7eb8b58fd5f72e8ee9aa3b94cd0ffaaa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Axes</type>
        <definition>Axes ostk::astro::flight::profile::models::Transform::getAxesAt</definition>
        <argsstring>(const Instant &amp;anInstant) const override</argsstring>
        <name>getAxesAt</name>
        <reimplements refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1ab18bd79e421c36df4ab716649ce549cd">getAxesAt</reimplements>
        <param>
          <type>const Instant &amp;</type>
          <declname>anInstant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="54" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.cpp" bodystart="71" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a7fa6ee57c59b5bff2c60001c11cac04c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Shared&lt; const Frame &gt;</type>
        <definition>Shared&lt; const Frame &gt; ostk::astro::flight::profile::models::Transform::getBodyFrame</definition>
        <argsstring>(const String &amp;aFrameName) const override</argsstring>
        <name>getBodyFrame</name>
        <reimplements refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1a04ded49c09d9a44820251c48f47d0ffa">getBodyFrame</reimplements>
        <param>
          <type>const String &amp;</type>
          <declname>aFrameName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="56" column="20" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.cpp" bodystart="96" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1aef9a20156493d68570a989d87ac2f9f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ostk::astro::flight::profile::models::Transform::print</definition>
        <argsstring>(std::ostream &amp;anOutputStream, bool displayDecorator=true) const override</argsstring>
        <name>print</name>
        <reimplements refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1ad9bb86b1869150e2bd970e9fa59ce36e">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>displayDecorator</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="58" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.cpp" bodystart="117" bodyend="122"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a31ed56d1b0b19d8f7363743664717403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const Transform &amp;aTransformModel)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform" kindref="compound">Transform</ref> &amp;</type>
          <declname>aTransformModel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="48" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a06ac043e7d6577f51578fc14331e1c6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform" kindref="compound">Transform</ref></type>
        <definition>Transform ostk::astro::flight::profile::models::Transform::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="60" column="22" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.cpp" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1ad09043542f34243cfa200d74db5c47bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform" kindref="compound">Transform</ref></type>
        <definition>Transform ostk::astro::flight::profile::models::Transform::InertialPointing</definition>
        <argsstring>(const Trajectory &amp;aTrajectory, const Quaternion &amp;aQuaternion)</argsstring>
        <name>InertialPointing</name>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>aTrajectory</declname>
        </param>
        <param>
          <type>const Quaternion &amp;</type>
          <declname>aQuaternion</declname>
        </param>
        <briefdescription>
<para>Constructs a flight profile with inertial pointing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aTrajectory</parametername>
</parameternamelist>
<parameterdescription>
<para>A trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aQuaternion</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointing in GCRF </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flight profile </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="67" column="22" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.cpp" bodystart="129" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a45cbb8066c7a6c56774746c3ea025c8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform" kindref="compound">Transform</ref></type>
        <definition>Transform ostk::astro::flight::profile::models::Transform::NadirPointing</definition>
        <argsstring>(const trajectory::Orbit &amp;anOrbit, const trajectory::Orbit::FrameType &amp;anOrbitalFrameType)</argsstring>
        <name>NadirPointing</name>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_orbit" kindref="compound">trajectory::Orbit</ref> &amp;</type>
          <declname>anOrbit</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1trajectory_1_1_orbit_1a1cc449ad56374471a8ab4300dde979e7" kindref="member">trajectory::Orbit::FrameType</ref> &amp;</type>
          <declname>anOrbitalFrameType</declname>
        </param>
        <briefdescription>
<para>Constructs a flight profile with nadir pointing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anOrbit</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anOrbitalFrameType</parametername>
</parameternamelist>
<parameterdescription>
<para>An orbital frame type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flight profile </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="74" column="22" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.cpp" bodystart="160" bodyend="188"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1ad49694ca5cfb4fabf17ac063d9953fb0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ostk::astro::flight::profile::models::Transform::operator==</definition>
        <argsstring>(const Model &amp;aModel) const override</argsstring>
        <name>operator==</name>
        <reimplements refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1a87f7ca747d79619e4b4bc04aa6a9252a">operator==</reimplements>
        <param>
          <type>const <ref refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model" kindref="compound">Model</ref> &amp;</type>
          <declname>aModel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="79" column="18" bodyfile="src/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.cpp" bodystart="190" bodyend="202"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform" kindref="compound">Transform</ref> provided profile model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ostk::astro::flight::profile::models::Transform</label>
        <link refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ostk::astro::flight::profile::Model</label>
        <link refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ostk::astro::flight::profile::models::Transform</label>
        <link refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ostk::astro::flight::profile::Model</label>
        <link refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model"/>
      </node>
    </collaborationgraph>
    <location file="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" line="42" column="1" bodyfile="include/OpenSpaceToolkit/Astrodynamics/Flight/Profile/Models/Transform.hpp" bodystart="41" bodyend="84"/>
    <listofallmembers>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1a7842761a8f6c0895c0b6048e9d3a5b7f" prot="public" virt="non-virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>as</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a6288febae942c92508173db08b4554b0" prot="public" virt="virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>calculateStateAt</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1ab81349e148cc39ad5662f7181f146493" prot="public" virt="virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>calculateStatesAt</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1aafd4791dacf320ddedddefbc8d0f2e0e" prot="public" virt="virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>clone</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a809ac072f615cf65ecf9dd1125282632" prot="private" virt="non-virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>frameSPtr_</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a7eb8b58fd5f72e8ee9aa3b94cd0ffaaa" prot="public" virt="virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>getAxesAt</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a7fa6ee57c59b5bff2c60001c11cac04c" prot="public" virt="virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>getBodyFrame</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1ad09043542f34243cfa200d74db5c47bf" prot="public" virt="non-virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>InertialPointing</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1a73363668308f0293014d6a77063cc809" prot="public" virt="non-virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>is</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a2d0f1f3cc3f340c5617125bea08a9930" prot="public" virt="virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>isDefined</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1a6301933ec5ccdd9dab16fa8ecbf73869" prot="public" virt="non-virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>Model</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a45cbb8066c7a6c56774746c3ea025c8d" prot="public" virt="non-virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>NadirPointing</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1a66eab26e18de60c179529ba5924b168f" prot="public" virt="virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>operator!=</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a31ed56d1b0b19d8f7363743664717403" prot="public" virt="non-virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>operator&lt;&lt;</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1ad49694ca5cfb4fabf17ac063d9953fb0" prot="protected" virt="virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>operator==</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1aef9a20156493d68570a989d87ac2f9f6" prot="public" virt="virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>print</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a95d76db47af0764c1a05c32298799d72" prot="public" virt="non-virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>Transform</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1adca7c31f9540544e78d79337af35fae8" prot="private" virt="non-virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>transformProvider_</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1models_1_1_transform_1a06ac043e7d6577f51578fc14331e1c6d" prot="public" virt="non-virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>Undefined</name></member>
      <member refid="classostk_1_1astro_1_1flight_1_1profile_1_1_model_1a4870ff5251fa9f4f27f961700ce49863" prot="public" virt="pure-virtual"><scope>ostk::astro::flight::profile::models::Transform</scope><name>~Model</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
